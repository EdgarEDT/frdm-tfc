   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TFC_ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	PotADC_Value,2,4
  18              		.comm	BatSenseADC_Value,1,1
  19              		.section	.bss.CurrentADC_State,"aw",%nobits
  22              	CurrentADC_State:
  23 0000 00       		.space	1
  24              		.global	CurrentLineScanPixel
  25              		.section	.bss.CurrentLineScanPixel,"aw",%nobits
  28              	CurrentLineScanPixel:
  29 0000 00       		.space	1
  30              		.global	CurrentLineScanChannel
  31              		.section	.bss.CurrentLineScanChannel,"aw",%nobits
  34              	CurrentLineScanChannel:
  35 0000 00       		.space	1
  36              		.section	.text.ADC_Cal,"ax",%progbits
  37              		.align	2
  38              		.global	ADC_Cal
  39              		.code	16
  40              		.thumb_func
  42              	ADC_Cal:
  43              	.LFB0:
  44              		.file 1 "../Sources/TFC/TFC_ADC.c"
   1:../Sources/TFC/TFC_ADC.c **** #include "TFC\TFC.h"
   2:../Sources/TFC/TFC_ADC.c **** 
   3:../Sources/TFC/TFC_ADC.c **** #define ADC_STATE_INIT							0
   4:../Sources/TFC/TFC_ADC.c **** #define ADC_STATE_CAPTURE_POT_0			        1
   5:../Sources/TFC/TFC_ADC.c **** #define ADC_STATE_CAPTURE_POT_1			        2
   6:../Sources/TFC/TFC_ADC.c **** #define ADC_STATE_CAPTURE_BATTERY_LEVEL			3
   7:../Sources/TFC/TFC_ADC.c **** #define ADC_STATE_CAPTURE_LINE_SCAN		        4
   8:../Sources/TFC/TFC_ADC.c **** 
   9:../Sources/TFC/TFC_ADC.c **** 
  10:../Sources/TFC/TFC_ADC.c **** volatile uint8_t PotADC_Value[2];
  11:../Sources/TFC/TFC_ADC.c **** volatile uint8_t BatSenseADC_Value;
  12:../Sources/TFC/TFC_ADC.c **** static uint8_t 	CurrentADC_State =	ADC_STATE_INIT;	
  13:../Sources/TFC/TFC_ADC.c **** 
  14:../Sources/TFC/TFC_ADC.c **** 
  15:../Sources/TFC/TFC_ADC.c **** volatile uint8_t CurrentLineScanPixel = 0;
  16:../Sources/TFC/TFC_ADC.c **** volatile uint8_t CurrentLineScanChannel = 0;
  17:../Sources/TFC/TFC_ADC.c **** 
  18:../Sources/TFC/TFC_ADC.c **** void InitADC0();
  19:../Sources/TFC/TFC_ADC.c **** 
  20:../Sources/TFC/TFC_ADC.c **** /******************************************************************************
  21:../Sources/TFC/TFC_ADC.c **** Function 1. Name	AUTO CAL ROUTINE   
  22:../Sources/TFC/TFC_ADC.c **** 
  23:../Sources/TFC/TFC_ADC.c **** Parameters		ADC module pointer points to adc0 or adc1 register map 
  24:../Sources/TFC/TFC_ADC.c ****                          base address.
  25:../Sources/TFC/TFC_ADC.c **** Returns			Zero indicates success.
  26:../Sources/TFC/TFC_ADC.c **** Notes         		Calibrates the ADC16. Required to meet specifications 
  27:../Sources/TFC/TFC_ADC.c ****                         after reset and before a conversion is initiated.
  28:../Sources/TFC/TFC_ADC.c **** ******************************************************************************/
  29:../Sources/TFC/TFC_ADC.c **** unsigned char ADC_Cal(ADC_MemMapPtr adcmap)
  30:../Sources/TFC/TFC_ADC.c **** {
  45              		.loc 1 30 0
  46              		.cfi_startproc
  47 0000 80B5     		push	{r7, lr}
  48              	.LCFI0:
  49              		.cfi_def_cfa_offset 8
  50              		.cfi_offset 7, -8
  51              		.cfi_offset 14, -4
  52 0002 84B0     		sub	sp, sp, #16
  53              	.LCFI1:
  54              		.cfi_def_cfa_offset 24
  55 0004 00AF     		add	r7, sp, #0
  56              	.LCFI2:
  57              		.cfi_def_cfa_register 7
  58 0006 7860     		str	r0, [r7, #4]
  31:../Sources/TFC/TFC_ADC.c **** 
  32:../Sources/TFC/TFC_ADC.c ****   unsigned short cal_var;
  33:../Sources/TFC/TFC_ADC.c ****   
  34:../Sources/TFC/TFC_ADC.c ****   ADC_SC2_REG(adcmap) &=  ~ADC_SC2_ADTRG_MASK ; // Enable Software Conversion Trigger for Calibrati
  59              		.loc 1 34 0
  60 0008 7B68     		ldr	r3, [r7, #4]
  61 000a 1B6A     		ldr	r3, [r3, #32]
  62 000c 4022     		mov	r2, #64
  63 000e 191C     		mov	r1, r3
  64 0010 9143     		bic	r1, r2
  65 0012 0A1C     		mov	r2, r1
  66 0014 7B68     		ldr	r3, [r7, #4]
  67 0016 1A62     		str	r2, [r3, #32]
  35:../Sources/TFC/TFC_ADC.c ****   ADC_SC3_REG(adcmap) &= ( ~ADC_SC3_ADCO_MASK & ~ADC_SC3_AVGS_MASK ); // set single conversion, cle
  68              		.loc 1 35 0
  69 0018 7B68     		ldr	r3, [r7, #4]
  70 001a 5B6A     		ldr	r3, [r3, #36]
  71 001c 0B22     		mov	r2, #11
  72 001e 191C     		mov	r1, r3
  73 0020 9143     		bic	r1, r2
  74 0022 0A1C     		mov	r2, r1
  75 0024 7B68     		ldr	r3, [r7, #4]
  76 0026 5A62     		str	r2, [r3, #36]
  36:../Sources/TFC/TFC_ADC.c ****   ADC_SC3_REG(adcmap) |= ( ADC_SC3_AVGE_MASK | ADC_SC3_AVGS(AVGS_32) );  // Turn averaging ON and s
  77              		.loc 1 36 0
  78 0028 7B68     		ldr	r3, [r7, #4]
  79 002a 5B6A     		ldr	r3, [r3, #36]
  80 002c 0722     		mov	r2, #7
  81 002e 1A43     		orr	r2, r3
  82 0030 7B68     		ldr	r3, [r7, #4]
  83 0032 5A62     		str	r2, [r3, #36]
  37:../Sources/TFC/TFC_ADC.c ****   
  38:../Sources/TFC/TFC_ADC.c ****   
  39:../Sources/TFC/TFC_ADC.c ****   ADC_SC3_REG(adcmap) |= ADC_SC3_CAL_MASK ;      // Start CAL
  84              		.loc 1 39 0
  85 0034 7B68     		ldr	r3, [r7, #4]
  86 0036 5B6A     		ldr	r3, [r3, #36]
  87 0038 8022     		mov	r2, #128
  88 003a 1A43     		orr	r2, r3
  89 003c 7B68     		ldr	r3, [r7, #4]
  90 003e 5A62     		str	r2, [r3, #36]
  40:../Sources/TFC/TFC_ADC.c ****   while ( (ADC_SC1_REG(adcmap,A) & ADC_SC1_COCO_MASK ) == COCO_NOT ); // Wait calibration end
  91              		.loc 1 40 0
  92 0040 C046     		mov	r8, r8
  93              	.L2:
  94              		.loc 1 40 0 is_stmt 0 discriminator 1
  95 0042 7B68     		ldr	r3, [r7, #4]
  96 0044 1B68     		ldr	r3, [r3]
  97 0046 1A1C     		mov	r2, r3
  98 0048 8023     		mov	r3, #128
  99 004a 1340     		and	r3, r2
 100 004c F9D0     		beq	.L2
  41:../Sources/TFC/TFC_ADC.c ****   	
  42:../Sources/TFC/TFC_ADC.c ****   if ((ADC_SC3_REG(adcmap)& ADC_SC3_CALF_MASK) == CALF_FAIL )
 101              		.loc 1 42 0 is_stmt 1
 102 004e 7B68     		ldr	r3, [r7, #4]
 103 0050 5B6A     		ldr	r3, [r3, #36]
 104 0052 1A1C     		mov	r2, r3
 105 0054 4023     		mov	r3, #64
 106 0056 1340     		and	r3, r2
 107 0058 01D0     		beq	.L3
  43:../Sources/TFC/TFC_ADC.c ****   {  
  44:../Sources/TFC/TFC_ADC.c ****    return(1);    // Check for Calibration fail error and return 
 108              		.loc 1 44 0
 109 005a 0123     		mov	r3, #1
 110 005c A8E0     		b	.L4
 111              	.L3:
  45:../Sources/TFC/TFC_ADC.c ****   }
  46:../Sources/TFC/TFC_ADC.c ****   // Calculate plus-side calibration
  47:../Sources/TFC/TFC_ADC.c ****   cal_var = 0x00;
 112              		.loc 1 47 0
 113 005e 3B1C     		mov	r3, r7
 114 0060 0E33     		add	r3, r3, #14
 115 0062 0022     		mov	r2, #0
 116 0064 1A80     		strh	r2, [r3]
  48:../Sources/TFC/TFC_ADC.c ****   
  49:../Sources/TFC/TFC_ADC.c ****   cal_var =  ADC_CLP0_REG(adcmap); 
 117              		.loc 1 49 0
 118 0066 7B68     		ldr	r3, [r7, #4]
 119 0068 DB6C     		ldr	r3, [r3, #76]
 120 006a 1A1C     		mov	r2, r3
 121 006c 3B1C     		mov	r3, r7
 122 006e 0E33     		add	r3, r3, #14
 123 0070 1A80     		strh	r2, [r3]
  50:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP1_REG(adcmap);
 124              		.loc 1 50 0
 125 0072 7B68     		ldr	r3, [r7, #4]
 126 0074 9B6C     		ldr	r3, [r3, #72]
 127 0076 99B2     		uxth	r1, r3
 128 0078 3B1C     		mov	r3, r7
 129 007a 0E33     		add	r3, r3, #14
 130 007c 3A1C     		mov	r2, r7
 131 007e 0E32     		add	r2, r2, #14
 132 0080 1288     		ldrh	r2, [r2]
 133 0082 8A18     		add	r2, r1, r2
 134 0084 1A80     		strh	r2, [r3]
  51:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP2_REG(adcmap);
 135              		.loc 1 51 0
 136 0086 7B68     		ldr	r3, [r7, #4]
 137 0088 5B6C     		ldr	r3, [r3, #68]
 138 008a 99B2     		uxth	r1, r3
 139 008c 3B1C     		mov	r3, r7
 140 008e 0E33     		add	r3, r3, #14
 141 0090 3A1C     		mov	r2, r7
 142 0092 0E32     		add	r2, r2, #14
 143 0094 1288     		ldrh	r2, [r2]
 144 0096 8A18     		add	r2, r1, r2
 145 0098 1A80     		strh	r2, [r3]
  52:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP3_REG(adcmap);
 146              		.loc 1 52 0
 147 009a 7B68     		ldr	r3, [r7, #4]
 148 009c 1B6C     		ldr	r3, [r3, #64]
 149 009e 99B2     		uxth	r1, r3
 150 00a0 3B1C     		mov	r3, r7
 151 00a2 0E33     		add	r3, r3, #14
 152 00a4 3A1C     		mov	r2, r7
 153 00a6 0E32     		add	r2, r2, #14
 154 00a8 1288     		ldrh	r2, [r2]
 155 00aa 8A18     		add	r2, r1, r2
 156 00ac 1A80     		strh	r2, [r3]
  53:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLP4_REG(adcmap);
 157              		.loc 1 53 0
 158 00ae 7B68     		ldr	r3, [r7, #4]
 159 00b0 DB6B     		ldr	r3, [r3, #60]
 160 00b2 99B2     		uxth	r1, r3
 161 00b4 3B1C     		mov	r3, r7
 162 00b6 0E33     		add	r3, r3, #14
 163 00b8 3A1C     		mov	r2, r7
 164 00ba 0E32     		add	r2, r2, #14
 165 00bc 1288     		ldrh	r2, [r2]
 166 00be 8A18     		add	r2, r1, r2
 167 00c0 1A80     		strh	r2, [r3]
  54:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLPS_REG(adcmap);
 168              		.loc 1 54 0
 169 00c2 7B68     		ldr	r3, [r7, #4]
 170 00c4 9B6B     		ldr	r3, [r3, #56]
 171 00c6 99B2     		uxth	r1, r3
 172 00c8 3B1C     		mov	r3, r7
 173 00ca 0E33     		add	r3, r3, #14
 174 00cc 3A1C     		mov	r2, r7
 175 00ce 0E32     		add	r2, r2, #14
 176 00d0 1288     		ldrh	r2, [r2]
 177 00d2 8A18     		add	r2, r1, r2
 178 00d4 1A80     		strh	r2, [r3]
  55:../Sources/TFC/TFC_ADC.c **** 
  56:../Sources/TFC/TFC_ADC.c ****   cal_var = cal_var/2;
 179              		.loc 1 56 0
 180 00d6 3B1C     		mov	r3, r7
 181 00d8 0E33     		add	r3, r3, #14
 182 00da 3A1C     		mov	r2, r7
 183 00dc 0E32     		add	r2, r2, #14
 184 00de 1288     		ldrh	r2, [r2]
 185 00e0 5208     		lsr	r2, r2, #1
 186 00e2 1A80     		strh	r2, [r3]
  57:../Sources/TFC/TFC_ADC.c ****   cal_var |= 0x8000; // Set MSB
 187              		.loc 1 57 0
 188 00e4 3B1C     		mov	r3, r7
 189 00e6 0E33     		add	r3, r3, #14
 190 00e8 3A1C     		mov	r2, r7
 191 00ea 0E32     		add	r2, r2, #14
 192 00ec 1288     		ldrh	r2, [r2]
 193 00ee 3249     		ldr	r1, .L5
 194 00f0 0A43     		orr	r2, r1
 195 00f2 1A80     		strh	r2, [r3]
  58:../Sources/TFC/TFC_ADC.c **** 
  59:../Sources/TFC/TFC_ADC.c ****   ADC_PG_REG(adcmap) = ADC_PG_PG(cal_var);
 196              		.loc 1 59 0
 197 00f4 3B1C     		mov	r3, r7
 198 00f6 0E33     		add	r3, r3, #14
 199 00f8 1A88     		ldrh	r2, [r3]
 200 00fa 7B68     		ldr	r3, [r7, #4]
 201 00fc DA62     		str	r2, [r3, #44]
  60:../Sources/TFC/TFC_ADC.c ****  
  61:../Sources/TFC/TFC_ADC.c **** 
  62:../Sources/TFC/TFC_ADC.c ****   // Calculate minus-side calibration
  63:../Sources/TFC/TFC_ADC.c ****   cal_var = 0x00;
 202              		.loc 1 63 0
 203 00fe 3B1C     		mov	r3, r7
 204 0100 0E33     		add	r3, r3, #14
 205 0102 0022     		mov	r2, #0
 206 0104 1A80     		strh	r2, [r3]
  64:../Sources/TFC/TFC_ADC.c **** 
  65:../Sources/TFC/TFC_ADC.c ****   cal_var =  ADC_CLM0_REG(adcmap); 
 207              		.loc 1 65 0
 208 0106 7B68     		ldr	r3, [r7, #4]
 209 0108 DB6E     		ldr	r3, [r3, #108]
 210 010a 1A1C     		mov	r2, r3
 211 010c 3B1C     		mov	r3, r7
 212 010e 0E33     		add	r3, r3, #14
 213 0110 1A80     		strh	r2, [r3]
  66:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLM1_REG(adcmap);
 214              		.loc 1 66 0
 215 0112 7B68     		ldr	r3, [r7, #4]
 216 0114 9B6E     		ldr	r3, [r3, #104]
 217 0116 99B2     		uxth	r1, r3
 218 0118 3B1C     		mov	r3, r7
 219 011a 0E33     		add	r3, r3, #14
 220 011c 3A1C     		mov	r2, r7
 221 011e 0E32     		add	r2, r2, #14
 222 0120 1288     		ldrh	r2, [r2]
 223 0122 8A18     		add	r2, r1, r2
 224 0124 1A80     		strh	r2, [r3]
  67:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLM2_REG(adcmap);
 225              		.loc 1 67 0
 226 0126 7B68     		ldr	r3, [r7, #4]
 227 0128 5B6E     		ldr	r3, [r3, #100]
 228 012a 99B2     		uxth	r1, r3
 229 012c 3B1C     		mov	r3, r7
 230 012e 0E33     		add	r3, r3, #14
 231 0130 3A1C     		mov	r2, r7
 232 0132 0E32     		add	r2, r2, #14
 233 0134 1288     		ldrh	r2, [r2]
 234 0136 8A18     		add	r2, r1, r2
 235 0138 1A80     		strh	r2, [r3]
  68:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLM3_REG(adcmap);
 236              		.loc 1 68 0
 237 013a 7B68     		ldr	r3, [r7, #4]
 238 013c 1B6E     		ldr	r3, [r3, #96]
 239 013e 99B2     		uxth	r1, r3
 240 0140 3B1C     		mov	r3, r7
 241 0142 0E33     		add	r3, r3, #14
 242 0144 3A1C     		mov	r2, r7
 243 0146 0E32     		add	r2, r2, #14
 244 0148 1288     		ldrh	r2, [r2]
 245 014a 8A18     		add	r2, r1, r2
 246 014c 1A80     		strh	r2, [r3]
  69:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLM4_REG(adcmap);
 247              		.loc 1 69 0
 248 014e 7B68     		ldr	r3, [r7, #4]
 249 0150 DB6D     		ldr	r3, [r3, #92]
 250 0152 99B2     		uxth	r1, r3
 251 0154 3B1C     		mov	r3, r7
 252 0156 0E33     		add	r3, r3, #14
 253 0158 3A1C     		mov	r2, r7
 254 015a 0E32     		add	r2, r2, #14
 255 015c 1288     		ldrh	r2, [r2]
 256 015e 8A18     		add	r2, r1, r2
 257 0160 1A80     		strh	r2, [r3]
  70:../Sources/TFC/TFC_ADC.c ****   cal_var += ADC_CLMS_REG(adcmap);
 258              		.loc 1 70 0
 259 0162 7B68     		ldr	r3, [r7, #4]
 260 0164 9B6D     		ldr	r3, [r3, #88]
 261 0166 99B2     		uxth	r1, r3
 262 0168 3B1C     		mov	r3, r7
 263 016a 0E33     		add	r3, r3, #14
 264 016c 3A1C     		mov	r2, r7
 265 016e 0E32     		add	r2, r2, #14
 266 0170 1288     		ldrh	r2, [r2]
 267 0172 8A18     		add	r2, r1, r2
 268 0174 1A80     		strh	r2, [r3]
  71:../Sources/TFC/TFC_ADC.c **** 
  72:../Sources/TFC/TFC_ADC.c ****   cal_var = cal_var/2;
 269              		.loc 1 72 0
 270 0176 3B1C     		mov	r3, r7
 271 0178 0E33     		add	r3, r3, #14
 272 017a 3A1C     		mov	r2, r7
 273 017c 0E32     		add	r2, r2, #14
 274 017e 1288     		ldrh	r2, [r2]
 275 0180 5208     		lsr	r2, r2, #1
 276 0182 1A80     		strh	r2, [r3]
  73:../Sources/TFC/TFC_ADC.c **** 
  74:../Sources/TFC/TFC_ADC.c ****   cal_var |= 0x8000; // Set MSB
 277              		.loc 1 74 0
 278 0184 3B1C     		mov	r3, r7
 279 0186 0E33     		add	r3, r3, #14
 280 0188 3A1C     		mov	r2, r7
 281 018a 0E32     		add	r2, r2, #14
 282 018c 1288     		ldrh	r2, [r2]
 283 018e 0A49     		ldr	r1, .L5
 284 0190 0A43     		orr	r2, r1
 285 0192 1A80     		strh	r2, [r3]
  75:../Sources/TFC/TFC_ADC.c **** 
  76:../Sources/TFC/TFC_ADC.c ****   ADC_MG_REG(adcmap) = ADC_MG_MG(cal_var); 
 286              		.loc 1 76 0
 287 0194 3B1C     		mov	r3, r7
 288 0196 0E33     		add	r3, r3, #14
 289 0198 1A88     		ldrh	r2, [r3]
 290 019a 7B68     		ldr	r3, [r7, #4]
 291 019c 1A63     		str	r2, [r3, #48]
  77:../Sources/TFC/TFC_ADC.c ****   
  78:../Sources/TFC/TFC_ADC.c ****   ADC_SC3_REG(adcmap) &= ~ADC_SC3_CAL_MASK ; /* Clear CAL bit */
 292              		.loc 1 78 0
 293 019e 7B68     		ldr	r3, [r7, #4]
 294 01a0 5B6A     		ldr	r3, [r3, #36]
 295 01a2 8022     		mov	r2, #128
 296 01a4 191C     		mov	r1, r3
 297 01a6 9143     		bic	r1, r2
 298 01a8 0A1C     		mov	r2, r1
 299 01aa 7B68     		ldr	r3, [r7, #4]
 300 01ac 5A62     		str	r2, [r3, #36]
  79:../Sources/TFC/TFC_ADC.c **** 
  80:../Sources/TFC/TFC_ADC.c ****   return(0);
 301              		.loc 1 80 0
 302 01ae 0023     		mov	r3, #0
 303              	.L4:
  81:../Sources/TFC/TFC_ADC.c **** }
 304              		.loc 1 81 0
 305 01b0 181C     		mov	r0, r3
 306 01b2 BD46     		mov	sp, r7
 307 01b4 04B0     		add	sp, sp, #16
 308              		@ sp needed for prologue
 309 01b6 80BD     		pop	{r7, pc}
 310              	.L6:
 311              		.align	2
 312              	.L5:
 313 01b8 0080FFFF 		.word	-32768
 314              		.cfi_endproc
 315              	.LFE0:
 317              		.section	.text.ADC_Config_Alt,"ax",%progbits
 318              		.align	2
 319              		.global	ADC_Config_Alt
 320              		.code	16
 321              		.thumb_func
 323              	ADC_Config_Alt:
 324              	.LFB1:
  82:../Sources/TFC/TFC_ADC.c **** 
  83:../Sources/TFC/TFC_ADC.c **** 
  84:../Sources/TFC/TFC_ADC.c **** 
  85:../Sources/TFC/TFC_ADC.c **** 
  86:../Sources/TFC/TFC_ADC.c **** /******************************************************************************
  87:../Sources/TFC/TFC_ADC.c **** Function 2 Name 	ADC_Config_Alt 
  88:../Sources/TFC/TFC_ADC.c **** Parameters		the register values to be set in the adc in a structure
  89:../Sources/TFC/TFC_ADC.c **** Returns			NONE
  90:../Sources/TFC/TFC_ADC.c **** Notes         		Configures ADC0 or ADC1 depending on adcmap
  91:../Sources/TFC/TFC_ADC.c ****                         Prior to calling this function populate the structure
  92:../Sources/TFC/TFC_ADC.c ****                         elements with the desired ADC configuration.
  93:../Sources/TFC/TFC_ADC.c **** ******************************************************************************/
  94:../Sources/TFC/TFC_ADC.c **** 
  95:../Sources/TFC/TFC_ADC.c **** 
  96:../Sources/TFC/TFC_ADC.c **** void ADC_Config_Alt(ADC_MemMapPtr adcmap, tADC_ConfigPtr ADC_CfgPtr)
  97:../Sources/TFC/TFC_ADC.c **** {
 325              		.loc 1 97 0
 326              		.cfi_startproc
 327 0000 80B5     		push	{r7, lr}
 328              	.LCFI3:
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 7, -8
 331              		.cfi_offset 14, -4
 332 0002 82B0     		sub	sp, sp, #8
 333              	.LCFI4:
 334              		.cfi_def_cfa_offset 16
 335 0004 00AF     		add	r7, sp, #0
 336              	.LCFI5:
 337              		.cfi_def_cfa_register 7
 338 0006 7860     		str	r0, [r7, #4]
 339 0008 3960     		str	r1, [r7]
  98:../Sources/TFC/TFC_ADC.c ****  ADC_CFG1_REG(adcmap) = ADC_CfgPtr->CONFIG1;
 340              		.loc 1 98 0
 341 000a 3B68     		ldr	r3, [r7]
 342 000c 1B78     		ldrb	r3, [r3]
 343 000e 1A1C     		mov	r2, r3
 344 0010 7B68     		ldr	r3, [r7, #4]
 345 0012 9A60     		str	r2, [r3, #8]
  99:../Sources/TFC/TFC_ADC.c ****  ADC_CFG2_REG(adcmap) = ADC_CfgPtr->CONFIG2;
 346              		.loc 1 99 0
 347 0014 3B68     		ldr	r3, [r7]
 348 0016 5B78     		ldrb	r3, [r3, #1]
 349 0018 1A1C     		mov	r2, r3
 350 001a 7B68     		ldr	r3, [r7, #4]
 351 001c DA60     		str	r2, [r3, #12]
 100:../Sources/TFC/TFC_ADC.c ****  ADC_CV1_REG(adcmap)  = ADC_CfgPtr->COMPARE1; 
 352              		.loc 1 100 0
 353 001e 3B68     		ldr	r3, [r7]
 354 0020 5B88     		ldrh	r3, [r3, #2]
 355 0022 1A1C     		mov	r2, r3
 356 0024 7B68     		ldr	r3, [r7, #4]
 357 0026 9A61     		str	r2, [r3, #24]
 101:../Sources/TFC/TFC_ADC.c ****  ADC_CV2_REG(adcmap)  = ADC_CfgPtr->COMPARE2;
 358              		.loc 1 101 0
 359 0028 3B68     		ldr	r3, [r7]
 360 002a 9B88     		ldrh	r3, [r3, #4]
 361 002c 1A1C     		mov	r2, r3
 362 002e 7B68     		ldr	r3, [r7, #4]
 363 0030 DA61     		str	r2, [r3, #28]
 102:../Sources/TFC/TFC_ADC.c ****  ADC_SC2_REG(adcmap)  = ADC_CfgPtr->STATUS2;
 364              		.loc 1 102 0
 365 0032 3B68     		ldr	r3, [r7]
 366 0034 9B79     		ldrb	r3, [r3, #6]
 367 0036 1A1C     		mov	r2, r3
 368 0038 7B68     		ldr	r3, [r7, #4]
 369 003a 1A62     		str	r2, [r3, #32]
 103:../Sources/TFC/TFC_ADC.c ****  ADC_SC3_REG(adcmap)  = ADC_CfgPtr->STATUS3;
 370              		.loc 1 103 0
 371 003c 3B68     		ldr	r3, [r7]
 372 003e DB79     		ldrb	r3, [r3, #7]
 373 0040 1A1C     		mov	r2, r3
 374 0042 7B68     		ldr	r3, [r7, #4]
 375 0044 5A62     		str	r2, [r3, #36]
 104:../Sources/TFC/TFC_ADC.c ****  //ADC_PGA_REG(adcmap)  = ADC_CfgPtr->PGA;
 105:../Sources/TFC/TFC_ADC.c ****  ADC_SC1_REG(adcmap,A)= ADC_CfgPtr->STATUS1A;       
 376              		.loc 1 105 0
 377 0046 3B68     		ldr	r3, [r7]
 378 0048 1B7A     		ldrb	r3, [r3, #8]
 379 004a 1A1C     		mov	r2, r3
 380 004c 7B68     		ldr	r3, [r7, #4]
 381 004e 1A60     		str	r2, [r3]
 106:../Sources/TFC/TFC_ADC.c ****  ADC_SC1_REG(adcmap,B)= ADC_CfgPtr->STATUS1B;
 382              		.loc 1 106 0
 383 0050 3B68     		ldr	r3, [r7]
 384 0052 5B7A     		ldrb	r3, [r3, #9]
 385 0054 1A1C     		mov	r2, r3
 386 0056 7B68     		ldr	r3, [r7, #4]
 387 0058 5A60     		str	r2, [r3, #4]
 107:../Sources/TFC/TFC_ADC.c **** }
 388              		.loc 1 107 0
 389 005a BD46     		mov	sp, r7
 390 005c 02B0     		add	sp, sp, #8
 391              		@ sp needed for prologue
 392 005e 80BD     		pop	{r7, pc}
 393              		.cfi_endproc
 394              	.LFE1:
 396              		.section	.text.ADC_Read_Cal,"ax",%progbits
 397              		.align	2
 398              		.global	ADC_Read_Cal
 399              		.code	16
 400              		.thumb_func
 402              	ADC_Read_Cal:
 403              	.LFB2:
 108:../Sources/TFC/TFC_ADC.c **** 
 109:../Sources/TFC/TFC_ADC.c **** 
 110:../Sources/TFC/TFC_ADC.c **** void ADC_Read_Cal(ADC_MemMapPtr adcmap, tADC_Cal_Blk *blk)
 111:../Sources/TFC/TFC_ADC.c **** {
 404              		.loc 1 111 0
 405              		.cfi_startproc
 406 0000 80B5     		push	{r7, lr}
 407              	.LCFI6:
 408              		.cfi_def_cfa_offset 8
 409              		.cfi_offset 7, -8
 410              		.cfi_offset 14, -4
 411 0002 82B0     		sub	sp, sp, #8
 412              	.LCFI7:
 413              		.cfi_def_cfa_offset 16
 414 0004 00AF     		add	r7, sp, #0
 415              	.LCFI8:
 416              		.cfi_def_cfa_register 7
 417 0006 7860     		str	r0, [r7, #4]
 418 0008 3960     		str	r1, [r7]
 112:../Sources/TFC/TFC_ADC.c ****   blk->OFS  = ADC_OFS_REG(adcmap);
 419              		.loc 1 112 0
 420 000a 7B68     		ldr	r3, [r7, #4]
 421 000c 9B6A     		ldr	r3, [r3, #40]
 422 000e 9AB2     		uxth	r2, r3
 423 0010 3B68     		ldr	r3, [r7]
 424 0012 1A80     		strh	r2, [r3]
 113:../Sources/TFC/TFC_ADC.c ****   blk->PG   = ADC_PG_REG(adcmap); 
 425              		.loc 1 113 0
 426 0014 7B68     		ldr	r3, [r7, #4]
 427 0016 DB6A     		ldr	r3, [r3, #44]
 428 0018 9AB2     		uxth	r2, r3
 429 001a 3B68     		ldr	r3, [r7]
 430 001c 5A80     		strh	r2, [r3, #2]
 114:../Sources/TFC/TFC_ADC.c ****   blk->MG   = ADC_MG_REG(adcmap); 
 431              		.loc 1 114 0
 432 001e 7B68     		ldr	r3, [r7, #4]
 433 0020 1B6B     		ldr	r3, [r3, #48]
 434 0022 9AB2     		uxth	r2, r3
 435 0024 3B68     		ldr	r3, [r7]
 436 0026 9A80     		strh	r2, [r3, #4]
 115:../Sources/TFC/TFC_ADC.c ****   blk->CLPD = ADC_CLPD_REG(adcmap); 
 437              		.loc 1 115 0
 438 0028 7B68     		ldr	r3, [r7, #4]
 439 002a 5B6B     		ldr	r3, [r3, #52]
 440 002c DAB2     		uxtb	r2, r3
 441 002e 3B68     		ldr	r3, [r7]
 442 0030 9A71     		strb	r2, [r3, #6]
 116:../Sources/TFC/TFC_ADC.c ****   blk->CLPS = ADC_CLPS_REG(adcmap); 
 443              		.loc 1 116 0
 444 0032 7B68     		ldr	r3, [r7, #4]
 445 0034 9B6B     		ldr	r3, [r3, #56]
 446 0036 DAB2     		uxtb	r2, r3
 447 0038 3B68     		ldr	r3, [r7]
 448 003a DA71     		strb	r2, [r3, #7]
 117:../Sources/TFC/TFC_ADC.c ****   blk->CLP4 = ADC_CLP4_REG(adcmap);
 449              		.loc 1 117 0
 450 003c 7B68     		ldr	r3, [r7, #4]
 451 003e DB6B     		ldr	r3, [r3, #60]
 452 0040 9AB2     		uxth	r2, r3
 453 0042 3B68     		ldr	r3, [r7]
 454 0044 1A81     		strh	r2, [r3, #8]
 118:../Sources/TFC/TFC_ADC.c ****   blk->CLP3 = ADC_CLP3_REG(adcmap); 
 455              		.loc 1 118 0
 456 0046 7B68     		ldr	r3, [r7, #4]
 457 0048 1B6C     		ldr	r3, [r3, #64]
 458 004a 9AB2     		uxth	r2, r3
 459 004c 3B68     		ldr	r3, [r7]
 460 004e 5A81     		strh	r2, [r3, #10]
 119:../Sources/TFC/TFC_ADC.c ****   blk->CLP2 = ADC_CLP2_REG(adcmap); 
 461              		.loc 1 119 0
 462 0050 7B68     		ldr	r3, [r7, #4]
 463 0052 5B6C     		ldr	r3, [r3, #68]
 464 0054 DAB2     		uxtb	r2, r3
 465 0056 3B68     		ldr	r3, [r7]
 466 0058 1A73     		strb	r2, [r3, #12]
 120:../Sources/TFC/TFC_ADC.c ****   blk->CLP1 = ADC_CLP1_REG(adcmap);
 467              		.loc 1 120 0
 468 005a 7B68     		ldr	r3, [r7, #4]
 469 005c 9B6C     		ldr	r3, [r3, #72]
 470 005e DAB2     		uxtb	r2, r3
 471 0060 3B68     		ldr	r3, [r7]
 472 0062 5A73     		strb	r2, [r3, #13]
 121:../Sources/TFC/TFC_ADC.c ****   blk->CLP0 = ADC_CLP0_REG(adcmap);
 473              		.loc 1 121 0
 474 0064 7B68     		ldr	r3, [r7, #4]
 475 0066 DB6C     		ldr	r3, [r3, #76]
 476 0068 DAB2     		uxtb	r2, r3
 477 006a 3B68     		ldr	r3, [r7]
 478 006c 9A73     		strb	r2, [r3, #14]
 122:../Sources/TFC/TFC_ADC.c ****   blk->CLMD = ADC_CLMD_REG(adcmap); 
 479              		.loc 1 122 0
 480 006e 7B68     		ldr	r3, [r7, #4]
 481 0070 5B6D     		ldr	r3, [r3, #84]
 482 0072 DAB2     		uxtb	r2, r3
 483 0074 3B68     		ldr	r3, [r7]
 484 0076 1A74     		strb	r2, [r3, #16]
 123:../Sources/TFC/TFC_ADC.c ****   blk->CLMS = ADC_CLMS_REG(adcmap); 
 485              		.loc 1 123 0
 486 0078 7B68     		ldr	r3, [r7, #4]
 487 007a 9B6D     		ldr	r3, [r3, #88]
 488 007c DAB2     		uxtb	r2, r3
 489 007e 3B68     		ldr	r3, [r7]
 490 0080 5A74     		strb	r2, [r3, #17]
 124:../Sources/TFC/TFC_ADC.c ****   blk->CLM4 = ADC_CLM4_REG(adcmap);
 491              		.loc 1 124 0
 492 0082 7B68     		ldr	r3, [r7, #4]
 493 0084 DB6D     		ldr	r3, [r3, #92]
 494 0086 9AB2     		uxth	r2, r3
 495 0088 3B68     		ldr	r3, [r7]
 496 008a 5A82     		strh	r2, [r3, #18]
 125:../Sources/TFC/TFC_ADC.c ****   blk->CLM3 = ADC_CLM3_REG(adcmap); 
 497              		.loc 1 125 0
 498 008c 7B68     		ldr	r3, [r7, #4]
 499 008e 1B6E     		ldr	r3, [r3, #96]
 500 0090 9AB2     		uxth	r2, r3
 501 0092 3B68     		ldr	r3, [r7]
 502 0094 9A82     		strh	r2, [r3, #20]
 126:../Sources/TFC/TFC_ADC.c ****   blk->CLM2 = ADC_CLM2_REG(adcmap); 
 503              		.loc 1 126 0
 504 0096 7B68     		ldr	r3, [r7, #4]
 505 0098 5B6E     		ldr	r3, [r3, #100]
 506 009a DAB2     		uxtb	r2, r3
 507 009c 3B68     		ldr	r3, [r7]
 508 009e 9A75     		strb	r2, [r3, #22]
 127:../Sources/TFC/TFC_ADC.c ****   blk->CLM1 = ADC_CLM1_REG(adcmap);
 509              		.loc 1 127 0
 510 00a0 7B68     		ldr	r3, [r7, #4]
 511 00a2 9B6E     		ldr	r3, [r3, #104]
 512 00a4 DAB2     		uxtb	r2, r3
 513 00a6 3B68     		ldr	r3, [r7]
 514 00a8 DA75     		strb	r2, [r3, #23]
 128:../Sources/TFC/TFC_ADC.c ****   blk->CLM0 = ADC_CLM0_REG(adcmap);
 515              		.loc 1 128 0
 516 00aa 7B68     		ldr	r3, [r7, #4]
 517 00ac DB6E     		ldr	r3, [r3, #108]
 518 00ae DAB2     		uxtb	r2, r3
 519 00b0 3B68     		ldr	r3, [r7]
 520 00b2 1A76     		strb	r2, [r3, #24]
 129:../Sources/TFC/TFC_ADC.c ****   
 130:../Sources/TFC/TFC_ADC.c **** }
 521              		.loc 1 130 0
 522 00b4 BD46     		mov	sp, r7
 523 00b6 02B0     		add	sp, sp, #8
 524              		@ sp needed for prologue
 525 00b8 80BD     		pop	{r7, pc}
 526              		.cfi_endproc
 527              	.LFE2:
 529 00ba C046     		.section	.text.InitADC0,"ax",%progbits
 530              		.align	2
 531              		.global	InitADC0
 532              		.code	16
 533              		.thumb_func
 535              	InitADC0:
 536              	.LFB3:
 131:../Sources/TFC/TFC_ADC.c **** 
 132:../Sources/TFC/TFC_ADC.c **** 
 133:../Sources/TFC/TFC_ADC.c **** 
 134:../Sources/TFC/TFC_ADC.c **** void InitADC0()
 135:../Sources/TFC/TFC_ADC.c **** {
 537              		.loc 1 135 0
 538              		.cfi_startproc
 539 0000 80B5     		push	{r7, lr}
 540              	.LCFI9:
 541              		.cfi_def_cfa_offset 8
 542              		.cfi_offset 7, -8
 543              		.cfi_offset 14, -4
 544 0002 84B0     		sub	sp, sp, #16
 545              	.LCFI10:
 546              		.cfi_def_cfa_offset 24
 547 0004 00AF     		add	r7, sp, #0
 548              	.LCFI11:
 549              		.cfi_def_cfa_register 7
 136:../Sources/TFC/TFC_ADC.c **** 	tADC_Config Master_Adc0_Config;
 137:../Sources/TFC/TFC_ADC.c **** 	
 138:../Sources/TFC/TFC_ADC.c **** 	
 139:../Sources/TFC/TFC_ADC.c ****     SIM_SCGC6 |= (SIM_SCGC6_ADC0_MASK);
 550              		.loc 1 139 0
 551 0006 1F4A     		ldr	r2, .L10
 552 0008 1E49     		ldr	r1, .L10
 553 000a 1F4B     		ldr	r3, .L10+4
 554 000c CB58     		ldr	r3, [r1, r3]
 555 000e 8021     		mov	r1, #128
 556 0010 0905     		lsl	r1, r1, #20
 557 0012 1943     		orr	r1, r3
 558 0014 1C4B     		ldr	r3, .L10+4
 559 0016 D150     		str	r1, [r2, r3]
 140:../Sources/TFC/TFC_ADC.c ****     
 141:../Sources/TFC/TFC_ADC.c ****     //Lets calibrate the ADC. 1st setup how the channel will be used.
 142:../Sources/TFC/TFC_ADC.c **** 
 143:../Sources/TFC/TFC_ADC.c ****     disable_irq(INT_ADC0-16);   
 560              		.loc 1 143 0
 561 0018 0F20     		mov	r0, #15
 562 001a FFF7FEFF 		bl	disable_irq
 144:../Sources/TFC/TFC_ADC.c ****      
 145:../Sources/TFC/TFC_ADC.c ****     Master_Adc0_Config.CONFIG1 = ADLPC_NORMAL 			//No low power mode
 563              		.loc 1 145 0
 564 001e 3B1C     		mov	r3, r7
 565 0020 5022     		mov	r2, #80
 566 0022 1A70     		strb	r2, [r3]
 146:../Sources/TFC/TFC_ADC.c **** 								| ADC_CFG1_ADIV(ADIV_4) //divide input by 4
 147:../Sources/TFC/TFC_ADC.c **** 								| ADLSMP_LONG 			//long sample time
 148:../Sources/TFC/TFC_ADC.c **** 								| ADC_CFG1_MODE(MODE_8)//single ended 8-bit conversion
 149:../Sources/TFC/TFC_ADC.c **** 								| ADC_CFG1_ADICLK(ADICLK_BUS);
 150:../Sources/TFC/TFC_ADC.c ****     
 151:../Sources/TFC/TFC_ADC.c ****     Master_Adc0_Config.CONFIG2 = MUXSEL_ADCA // select the A side of the ADC channel.
 567              		.loc 1 151 0
 568 0024 3B1C     		mov	r3, r7
 569 0026 0722     		mov	r2, #7
 570 0028 5A70     		strb	r2, [r3, #1]
 152:../Sources/TFC/TFC_ADC.c **** 								| ADACKEN_DISABLED
 153:../Sources/TFC/TFC_ADC.c **** 								| ADHSC_HISPEED
 154:../Sources/TFC/TFC_ADC.c **** 								| ADC_CFG2_ADLSTS(ADLSTS_2);//Extra long sample Time (20 extra clocks)
 155:../Sources/TFC/TFC_ADC.c ****     
 156:../Sources/TFC/TFC_ADC.c ****     
 157:../Sources/TFC/TFC_ADC.c ****     Master_Adc0_Config.COMPARE1 = 00000; // Comparators don't matter for calibration
 571              		.loc 1 157 0
 572 002a 3B1C     		mov	r3, r7
 573 002c 0022     		mov	r2, #0
 574 002e 5A80     		strh	r2, [r3, #2]
 158:../Sources/TFC/TFC_ADC.c ****     Master_Adc0_Config.COMPARE1 = 0xFFFF;
 575              		.loc 1 158 0
 576 0030 3B1C     		mov	r3, r7
 577 0032 0122     		mov	r2, #1
 578 0034 5242     		neg	r2, r2
 579 0036 5A80     		strh	r2, [r3, #2]
 159:../Sources/TFC/TFC_ADC.c ****     
 160:../Sources/TFC/TFC_ADC.c ****     Master_Adc0_Config.STATUS2  = ADTRG_HW //hardware triggers for calibration
 580              		.loc 1 160 0
 581 0038 3B1C     		mov	r3, r7
 582 003a 5822     		mov	r2, #88
 583 003c 9A71     		strb	r2, [r3, #6]
 161:../Sources/TFC/TFC_ADC.c ****                                | ACFE_DISABLED //disable comparator
 162:../Sources/TFC/TFC_ADC.c ****                                | ACFGT_GREATER
 163:../Sources/TFC/TFC_ADC.c ****                                | ACREN_ENABLED
 164:../Sources/TFC/TFC_ADC.c ****                                | DMAEN_DISABLED //Disable DMA
 165:../Sources/TFC/TFC_ADC.c ****                                | ADC_SC2_REFSEL(REFSEL_EXT); //External Reference
 166:../Sources/TFC/TFC_ADC.c ****         
 167:../Sources/TFC/TFC_ADC.c ****     Master_Adc0_Config.STATUS3 = CAL_OFF  
 584              		.loc 1 167 0
 585 003e 3B1C     		mov	r3, r7
 586 0040 0422     		mov	r2, #4
 587 0042 DA71     		strb	r2, [r3, #7]
 168:../Sources/TFC/TFC_ADC.c **** 								| ADCO_SINGLE
 169:../Sources/TFC/TFC_ADC.c ****     							| AVGE_ENABLED
 170:../Sources/TFC/TFC_ADC.c **** 								| ADC_SC3_AVGS(AVGS_4);
 171:../Sources/TFC/TFC_ADC.c **** 								
 172:../Sources/TFC/TFC_ADC.c ****     Master_Adc0_Config.PGA =     0; // Disable the PGA
 588              		.loc 1 172 0
 589 0044 3B1C     		mov	r3, r7
 590 0046 0022     		mov	r2, #0
 591 0048 DA60     		str	r2, [r3, #12]
 173:../Sources/TFC/TFC_ADC.c ****    
 174:../Sources/TFC/TFC_ADC.c ****    
 175:../Sources/TFC/TFC_ADC.c ****     // Configure ADC as it will be used, but because ADC_SC1_ADCH is 31,
 176:../Sources/TFC/TFC_ADC.c ****     // the ADC will be inactive.  Channel 31 is just disable function.
 177:../Sources/TFC/TFC_ADC.c ****     // There really is no channel 31.
 178:../Sources/TFC/TFC_ADC.c ****     
 179:../Sources/TFC/TFC_ADC.c ****     Master_Adc0_Config.STATUS1A = AIEN_ON | DIFF_SINGLE | ADC_SC1_ADCH(31);
 592              		.loc 1 179 0
 593 004a 3B1C     		mov	r3, r7
 594 004c 5F22     		mov	r2, #95
 595 004e 1A72     		strb	r2, [r3, #8]
 180:../Sources/TFC/TFC_ADC.c **** 
 181:../Sources/TFC/TFC_ADC.c ****     
 182:../Sources/TFC/TFC_ADC.c ****     ADC_Config_Alt(ADC0_BASE_PTR, &Master_Adc0_Config);  // config ADC
 596              		.loc 1 182 0
 597 0050 0E4A     		ldr	r2, .L10+8
 598 0052 3B1C     		mov	r3, r7
 599 0054 101C     		mov	r0, r2
 600 0056 191C     		mov	r1, r3
 601 0058 FFF7FEFF 		bl	ADC_Config_Alt
 183:../Sources/TFC/TFC_ADC.c ****  
 184:../Sources/TFC/TFC_ADC.c ****     // Calibrate the ADC in the configuration in which it will be used:
 185:../Sources/TFC/TFC_ADC.c ****      ADC_Cal(ADC0_BASE_PTR);                    // do the calibration
 602              		.loc 1 185 0
 603 005c 0B4B     		ldr	r3, .L10+8
 604 005e 181C     		mov	r0, r3
 605 0060 FFF7FEFF 		bl	ADC_Cal
 186:../Sources/TFC/TFC_ADC.c ****      
 187:../Sources/TFC/TFC_ADC.c ****      
 188:../Sources/TFC/TFC_ADC.c ****      Master_Adc0_Config.STATUS2  = ACFE_DISABLED //disable comparator
 606              		.loc 1 188 0
 607 0064 3B1C     		mov	r3, r7
 608 0066 1822     		mov	r2, #24
 609 0068 9A71     		strb	r2, [r3, #6]
 189:../Sources/TFC/TFC_ADC.c ****                                 | ACFGT_GREATER
 190:../Sources/TFC/TFC_ADC.c ****                                 | ACREN_ENABLED
 191:../Sources/TFC/TFC_ADC.c ****                                 | DMAEN_DISABLED //Disable DMA
 192:../Sources/TFC/TFC_ADC.c ****                                 | ADC_SC2_REFSEL(REFSEL_EXT); //External Reference
 193:../Sources/TFC/TFC_ADC.c ****     
 194:../Sources/TFC/TFC_ADC.c ****      Master_Adc0_Config.STATUS3 = CAL_OFF  
 610              		.loc 1 194 0
 611 006a 3B1C     		mov	r3, r7
 612 006c 0022     		mov	r2, #0
 613 006e DA71     		strb	r2, [r3, #7]
 195:../Sources/TFC/TFC_ADC.c ****      							| ADCO_SINGLE;
 196:../Sources/TFC/TFC_ADC.c ****      	 	 	 	 	 	 	
 197:../Sources/TFC/TFC_ADC.c ****      	 	 	 	 	 	 	
 198:../Sources/TFC/TFC_ADC.c ****      			
 199:../Sources/TFC/TFC_ADC.c ****      ADC_Config_Alt(ADC0_BASE_PTR, &Master_Adc0_Config);
 614              		.loc 1 199 0
 615 0070 064A     		ldr	r2, .L10+8
 616 0072 3B1C     		mov	r3, r7
 617 0074 101C     		mov	r0, r2
 618 0076 191C     		mov	r1, r3
 619 0078 FFF7FEFF 		bl	ADC_Config_Alt
 200:../Sources/TFC/TFC_ADC.c **** }
 620              		.loc 1 200 0
 621 007c BD46     		mov	sp, r7
 622 007e 04B0     		add	sp, sp, #16
 623              		@ sp needed for prologue
 624 0080 80BD     		pop	{r7, pc}
 625              	.L11:
 626 0082 C046     		.align	2
 627              	.L10:
 628 0084 00700440 		.word	1074032640
 629 0088 3C100000 		.word	4156
 630 008c 00B00340 		.word	1073983488
 631              		.cfi_endproc
 632              	.LFE3:
 634              		.section	.text.TFC_InitADCs,"ax",%progbits
 635              		.align	2
 636              		.global	TFC_InitADCs
 637              		.code	16
 638              		.thumb_func
 640              	TFC_InitADCs:
 641              	.LFB4:
 201:../Sources/TFC/TFC_ADC.c **** 
 202:../Sources/TFC/TFC_ADC.c **** 
 203:../Sources/TFC/TFC_ADC.c **** 
 204:../Sources/TFC/TFC_ADC.c **** void TFC_InitADCs()
 205:../Sources/TFC/TFC_ADC.c **** {
 642              		.loc 1 205 0
 643              		.cfi_startproc
 644 0000 80B5     		push	{r7, lr}
 645              	.LCFI12:
 646              		.cfi_def_cfa_offset 8
 647              		.cfi_offset 7, -8
 648              		.cfi_offset 14, -4
 649 0002 00AF     		add	r7, sp, #0
 650              	.LCFI13:
 651              		.cfi_def_cfa_register 7
 206:../Sources/TFC/TFC_ADC.c **** 
 207:../Sources/TFC/TFC_ADC.c **** 	 InitADC0();
 652              		.loc 1 207 0
 653 0004 FFF7FEFF 		bl	InitADC0
 208:../Sources/TFC/TFC_ADC.c **** 
 209:../Sources/TFC/TFC_ADC.c **** 	
 210:../Sources/TFC/TFC_ADC.c **** 	//All Adc processing of the Pots and linescan will be done in the ADC0 IRQ!
 211:../Sources/TFC/TFC_ADC.c **** 	//A state machine will scan through the channels.
 212:../Sources/TFC/TFC_ADC.c **** 	//This is done to automate the linescan capture on Channel 0 to ensure that timing is very even
 213:../Sources/TFC/TFC_ADC.c **** 	CurrentADC_State =	ADC_STATE_INIT;	
 654              		.loc 1 213 0
 655 0008 144B     		ldr	r3, .L13
 656 000a 0022     		mov	r2, #0
 657 000c 1A70     		strb	r2, [r3]
 214:../Sources/TFC/TFC_ADC.c **** 
 215:../Sources/TFC/TFC_ADC.c ****     //The pump will be primed with the PIT interrupt.  upon timeout/interrupt it will set the SI si
 216:../Sources/TFC/TFC_ADC.c **** 	//for the camera and then start the conversions for the pots.
 217:../Sources/TFC/TFC_ADC.c **** 	
 218:../Sources/TFC/TFC_ADC.c **** 	//Enable clock to the PIT
 219:../Sources/TFC/TFC_ADC.c **** 	SIM_SCGC6 |= SIM_SCGC6_PIT_MASK;
 658              		.loc 1 219 0
 659 000e 144A     		ldr	r2, .L13+4
 660 0010 1349     		ldr	r1, .L13+4
 661 0012 144B     		ldr	r3, .L13+8
 662 0014 CB58     		ldr	r3, [r1, r3]
 663 0016 8021     		mov	r1, #128
 664 0018 0904     		lsl	r1, r1, #16
 665 001a 1943     		orr	r1, r3
 666 001c 114B     		ldr	r3, .L13+8
 667 001e D150     		str	r1, [r2, r3]
 220:../Sources/TFC/TFC_ADC.c **** 	
 221:../Sources/TFC/TFC_ADC.c **** 	//We will use PIT0
 222:../Sources/TFC/TFC_ADC.c **** 	TFC_SetLineScanExposureTime(TFC_DEFAULT_LINESCAN_EXPOSURE_TIME_uS);
 668              		.loc 1 222 0
 669 0020 114B     		ldr	r3, .L13+12
 670 0022 181C     		mov	r0, r3
 671 0024 FFF7FEFF 		bl	TFC_SetLineScanExposureTime
 223:../Sources/TFC/TFC_ADC.c **** 	//enable PIT0 and its interrupt
 224:../Sources/TFC/TFC_ADC.c **** 	PIT_TCTRL0 = PIT_TCTRL_TEN_MASK | PIT_TCTRL_TIE_MASK;
 672              		.loc 1 224 0
 673 0028 104A     		ldr	r2, .L13+16
 674 002a 8423     		mov	r3, #132
 675 002c 5B00     		lsl	r3, r3, #1
 676 002e 0321     		mov	r1, #3
 677 0030 D150     		str	r1, [r2, r3]
 225:../Sources/TFC/TFC_ADC.c **** 
 226:../Sources/TFC/TFC_ADC.c **** 	PIT_MCR |= PIT_MCR_FRZ_MASK; // stop the pit when in debug mode
 678              		.loc 1 226 0
 679 0032 0E4B     		ldr	r3, .L13+16
 680 0034 0D4A     		ldr	r2, .L13+16
 681 0036 1268     		ldr	r2, [r2]
 682 0038 0121     		mov	r1, #1
 683 003a 0A43     		orr	r2, r1
 684 003c 1A60     		str	r2, [r3]
 227:../Sources/TFC/TFC_ADC.c **** 	//Enable the PIT module
 228:../Sources/TFC/TFC_ADC.c **** 	PIT_MCR &= ~PIT_MCR_MDIS_MASK;
 685              		.loc 1 228 0
 686 003e 0B4B     		ldr	r3, .L13+16
 687 0040 0A4A     		ldr	r2, .L13+16
 688 0042 1268     		ldr	r2, [r2]
 689 0044 0221     		mov	r1, #2
 690 0046 8A43     		bic	r2, r1
 691 0048 1A60     		str	r2, [r3]
 229:../Sources/TFC/TFC_ADC.c **** 	
 230:../Sources/TFC/TFC_ADC.c **** 	enable_irq(INT_PIT-16);
 692              		.loc 1 230 0
 693 004a 1620     		mov	r0, #22
 694 004c FFF7FEFF 		bl	enable_irq
 231:../Sources/TFC/TFC_ADC.c **** 	enable_irq(INT_ADC0-16);
 695              		.loc 1 231 0
 696 0050 0F20     		mov	r0, #15
 697 0052 FFF7FEFF 		bl	enable_irq
 232:../Sources/TFC/TFC_ADC.c **** 	
 233:../Sources/TFC/TFC_ADC.c **** 
 234:../Sources/TFC/TFC_ADC.c **** 	
 235:../Sources/TFC/TFC_ADC.c **** }
 698              		.loc 1 235 0
 699 0056 BD46     		mov	sp, r7
 700              		@ sp needed for prologue
 701 0058 80BD     		pop	{r7, pc}
 702              	.L14:
 703 005a C046     		.align	2
 704              	.L13:
 705 005c 00000000 		.word	CurrentADC_State
 706 0060 00700440 		.word	1074032640
 707 0064 3C100000 		.word	4156
 708 0068 50C30000 		.word	50000
 709 006c 00700340 		.word	1073967104
 710              		.cfi_endproc
 711              	.LFE4:
 713              		.section	.text.PIT_IRQHandler,"ax",%progbits
 714              		.align	2
 715              		.global	PIT_IRQHandler
 716              		.code	16
 717              		.thumb_func
 719              	PIT_IRQHandler:
 720              	.LFB5:
 236:../Sources/TFC/TFC_ADC.c **** 
 237:../Sources/TFC/TFC_ADC.c **** void PIT_IRQHandler()
 238:../Sources/TFC/TFC_ADC.c **** {
 721              		.loc 1 238 0
 722              		.cfi_startproc
 723 0000 80B5     		push	{r7, lr}
 724              	.LCFI14:
 725              		.cfi_def_cfa_offset 8
 726              		.cfi_offset 7, -8
 727              		.cfi_offset 14, -4
 728 0002 00AF     		add	r7, sp, #0
 729              	.LCFI15:
 730              		.cfi_def_cfa_register 7
 239:../Sources/TFC/TFC_ADC.c **** 	PIT_TFLG0 = PIT_TFLG_TIF_MASK; //Turn off the Pit 0 Irq flag 
 731              		.loc 1 239 0
 732 0004 0A4A     		ldr	r2, .L16
 733 0006 8623     		mov	r3, #134
 734 0008 5B00     		lsl	r3, r3, #1
 735 000a 0121     		mov	r1, #1
 736 000c D150     		str	r1, [r2, r3]
 240:../Sources/TFC/TFC_ADC.c **** 	
 241:../Sources/TFC/TFC_ADC.c **** 	TAOS_SI_HIGH;
 737              		.loc 1 241 0
 738 000e 094B     		ldr	r3, .L16+4
 739 0010 8022     		mov	r2, #128
 740 0012 5A60     		str	r2, [r3, #4]
 242:../Sources/TFC/TFC_ADC.c **** 	//Prime the ADC pump and start capturing POT 0
 243:../Sources/TFC/TFC_ADC.c **** 	CurrentADC_State = ADC_STATE_CAPTURE_POT_0;
 741              		.loc 1 243 0
 742 0014 084B     		ldr	r3, .L16+8
 743 0016 0122     		mov	r2, #1
 744 0018 1A70     		strb	r2, [r3]
 244:../Sources/TFC/TFC_ADC.c **** 	
 245:../Sources/TFC/TFC_ADC.c **** 	ADC0_CFG2  &= ~ADC_CFG2_MUXSEL_MASK; //Select the A side of the mux
 745              		.loc 1 245 0
 746 001a 084B     		ldr	r3, .L16+12
 747 001c 074A     		ldr	r2, .L16+12
 748 001e D268     		ldr	r2, [r2, #12]
 749 0020 1021     		mov	r1, #16
 750 0022 8A43     		bic	r2, r1
 751 0024 DA60     		str	r2, [r3, #12]
 246:../Sources/TFC/TFC_ADC.c **** 	ADC0_SC1A  =  TFC_POT_0_ADC_CHANNEL | ADC_SC1_AIEN_MASK;  //Start the State machine at POT0
 752              		.loc 1 246 0
 753 0026 054B     		ldr	r3, .L16+12
 754 0028 4D22     		mov	r2, #77
 755 002a 1A60     		str	r2, [r3]
 247:../Sources/TFC/TFC_ADC.c **** }
 756              		.loc 1 247 0
 757 002c BD46     		mov	sp, r7
 758              		@ sp needed for prologue
 759 002e 80BD     		pop	{r7, pc}
 760              	.L17:
 761              		.align	2
 762              	.L16:
 763 0030 00700340 		.word	1073967104
 764 0034 C0F00F40 		.word	1074786496
 765 0038 00000000 		.word	CurrentADC_State
 766 003c 00B00340 		.word	1073983488
 767              		.cfi_endproc
 768              	.LFE5:
 770              		.section	.text.ADC0_IRQHandler,"ax",%progbits
 771              		.align	2
 772              		.global	ADC0_IRQHandler
 773              		.code	16
 774              		.thumb_func
 776              	ADC0_IRQHandler:
 777              	.LFB6:
 248:../Sources/TFC/TFC_ADC.c **** 
 249:../Sources/TFC/TFC_ADC.c **** 
 250:../Sources/TFC/TFC_ADC.c **** 
 251:../Sources/TFC/TFC_ADC.c **** void ADC0_IRQHandler()
 252:../Sources/TFC/TFC_ADC.c **** {
 778              		.loc 1 252 0
 779              		.cfi_startproc
 780 0000 80B5     		push	{r7, lr}
 781              	.LCFI16:
 782              		.cfi_def_cfa_offset 8
 783              		.cfi_offset 7, -8
 784              		.cfi_offset 14, -4
 785 0002 82B0     		sub	sp, sp, #8
 786              	.LCFI17:
 787              		.cfi_def_cfa_offset 16
 788 0004 00AF     		add	r7, sp, #0
 789              	.LCFI18:
 790              		.cfi_def_cfa_register 7
 253:../Sources/TFC/TFC_ADC.c **** 	uint8_t Junk;
 254:../Sources/TFC/TFC_ADC.c **** 	switch(CurrentADC_State)
 791              		.loc 1 254 0
 792 0006 744B     		ldr	r3, .L38
 793 0008 1B78     		ldrb	r3, [r3]
 794 000a 022B     		cmp	r3, #2
 795 000c 1FD0     		beq	.L21
 796 000e 02DC     		bgt	.L24
 797 0010 012B     		cmp	r3, #1
 798 0012 0AD0     		beq	.L20
 799 0014 03E0     		b	.L19
 800              	.L24:
 801 0016 032B     		cmp	r3, #3
 802 0018 2BD0     		beq	.L22
 803 001a 042B     		cmp	r3, #4
 804 001c 54D0     		beq	.L23
 805              	.L19:
 255:../Sources/TFC/TFC_ADC.c **** 	{
 256:../Sources/TFC/TFC_ADC.c **** 		default:
 257:../Sources/TFC/TFC_ADC.c **** 			Junk =  ADC0_RA;
 806              		.loc 1 257 0
 807 001e 6F4B     		ldr	r3, .L38+4
 808 0020 1B69     		ldr	r3, [r3, #16]
 809 0022 1A1C     		mov	r2, r3
 810 0024 FB1D     		add	r3, r7, #7
 811 0026 1A70     		strb	r2, [r3]
 258:../Sources/TFC/TFC_ADC.c **** 		break;
 812              		.loc 1 258 0
 813 0028 D2E0     		b	.L18
 814              	.L20:
 259:../Sources/TFC/TFC_ADC.c **** 		
 260:../Sources/TFC/TFC_ADC.c **** 		case ADC_STATE_CAPTURE_POT_0:
 261:../Sources/TFC/TFC_ADC.c **** 				
 262:../Sources/TFC/TFC_ADC.c **** 				PotADC_Value[0] = ADC0_RA;
 815              		.loc 1 262 0
 816 002a 6C4B     		ldr	r3, .L38+4
 817 002c 1B69     		ldr	r3, [r3, #16]
 818 002e DAB2     		uxtb	r2, r3
 819 0030 6B4B     		ldr	r3, .L38+8
 820 0032 1A70     		strb	r2, [r3]
 263:../Sources/TFC/TFC_ADC.c **** 				ADC0_CFG2  &= ~ADC_CFG2_MUXSEL_MASK; //Select the A side of the mux
 821              		.loc 1 263 0
 822 0034 694B     		ldr	r3, .L38+4
 823 0036 694A     		ldr	r2, .L38+4
 824 0038 D268     		ldr	r2, [r2, #12]
 825 003a 1021     		mov	r1, #16
 826 003c 8A43     		bic	r2, r1
 827 003e DA60     		str	r2, [r3, #12]
 264:../Sources/TFC/TFC_ADC.c **** 				ADC0_SC1A  =  TFC_POT_1_ADC_CHANNEL | ADC_SC1_AIEN_MASK;
 828              		.loc 1 264 0
 829 0040 664B     		ldr	r3, .L38+4
 830 0042 4C22     		mov	r2, #76
 831 0044 1A60     		str	r2, [r3]
 265:../Sources/TFC/TFC_ADC.c **** 				CurrentADC_State = ADC_STATE_CAPTURE_POT_1;
 832              		.loc 1 265 0
 833 0046 644B     		ldr	r3, .L38
 834 0048 0222     		mov	r2, #2
 835 004a 1A70     		strb	r2, [r3]
 266:../Sources/TFC/TFC_ADC.c **** 				
 267:../Sources/TFC/TFC_ADC.c **** 			break;
 836              		.loc 1 267 0
 837 004c C0E0     		b	.L18
 838              	.L21:
 268:../Sources/TFC/TFC_ADC.c **** 		
 269:../Sources/TFC/TFC_ADC.c **** 		case ADC_STATE_CAPTURE_POT_1:
 270:../Sources/TFC/TFC_ADC.c **** 		
 271:../Sources/TFC/TFC_ADC.c **** 				PotADC_Value[1] = ADC0_RA;
 839              		.loc 1 271 0
 840 004e 634B     		ldr	r3, .L38+4
 841 0050 1B69     		ldr	r3, [r3, #16]
 842 0052 DAB2     		uxtb	r2, r3
 843 0054 624B     		ldr	r3, .L38+8
 844 0056 5A70     		strb	r2, [r3, #1]
 272:../Sources/TFC/TFC_ADC.c **** 				ADC0_CFG2  |= ADC_CFG2_MUXSEL_MASK; //Select the B side of the mux
 845              		.loc 1 272 0
 846 0058 604B     		ldr	r3, .L38+4
 847 005a 604A     		ldr	r2, .L38+4
 848 005c D268     		ldr	r2, [r2, #12]
 849 005e 1021     		mov	r1, #16
 850 0060 0A43     		orr	r2, r1
 851 0062 DA60     		str	r2, [r3, #12]
 273:../Sources/TFC/TFC_ADC.c **** 				ADC0_SC1A  =  TFC_BAT_SENSE_CHANNEL| ADC_SC1_AIEN_MASK;
 852              		.loc 1 273 0
 853 0064 5D4B     		ldr	r3, .L38+4
 854 0066 4422     		mov	r2, #68
 855 0068 1A60     		str	r2, [r3]
 274:../Sources/TFC/TFC_ADC.c **** 				CurrentADC_State = ADC_STATE_CAPTURE_BATTERY_LEVEL;
 856              		.loc 1 274 0
 857 006a 5B4B     		ldr	r3, .L38
 858 006c 0322     		mov	r2, #3
 859 006e 1A70     		strb	r2, [r3]
 275:../Sources/TFC/TFC_ADC.c **** 				
 276:../Sources/TFC/TFC_ADC.c **** 			break;
 860              		.loc 1 276 0
 861 0070 AEE0     		b	.L18
 862              	.L22:
 277:../Sources/TFC/TFC_ADC.c **** 		
 278:../Sources/TFC/TFC_ADC.c **** 		case ADC_STATE_CAPTURE_BATTERY_LEVEL:
 279:../Sources/TFC/TFC_ADC.c **** 			
 280:../Sources/TFC/TFC_ADC.c **** 				BatSenseADC_Value = ADC0_RA;
 863              		.loc 1 280 0
 864 0072 5A4B     		ldr	r3, .L38+4
 865 0074 1B69     		ldr	r3, [r3, #16]
 866 0076 DAB2     		uxtb	r2, r3
 867 0078 5A4B     		ldr	r3, .L38+12
 868 007a 1A70     		strb	r2, [r3]
 281:../Sources/TFC/TFC_ADC.c **** 				
 282:../Sources/TFC/TFC_ADC.c **** 				//Now we will start the sequence for the Linescan camera
 283:../Sources/TFC/TFC_ADC.c **** 				
 284:../Sources/TFC/TFC_ADC.c **** 				TAOS_CLK_HIGH;
 869              		.loc 1 284 0
 870 007c 5A4B     		ldr	r3, .L38+16
 871 007e 0222     		mov	r2, #2
 872 0080 5A60     		str	r2, [r3, #4]
 285:../Sources/TFC/TFC_ADC.c **** 				
 286:../Sources/TFC/TFC_ADC.c **** 				for(Junk = 0;Junk<50;Junk++)
 873              		.loc 1 286 0
 874 0082 FB1D     		add	r3, r7, #7
 875 0084 0022     		mov	r2, #0
 876 0086 1A70     		strb	r2, [r3]
 877 0088 04E0     		b	.L26
 878              	.L27:
 879              		.loc 1 286 0 is_stmt 0 discriminator 2
 880 008a FB1D     		add	r3, r7, #7
 881 008c FA1D     		add	r2, r7, #7
 882 008e 1278     		ldrb	r2, [r2]
 883 0090 0132     		add	r2, r2, #1
 884 0092 1A70     		strb	r2, [r3]
 885              	.L26:
 886              		.loc 1 286 0 discriminator 1
 887 0094 FB1D     		add	r3, r7, #7
 888 0096 1B78     		ldrb	r3, [r3]
 889 0098 312B     		cmp	r3, #49
 890 009a F6D9     		bls	.L27
 287:../Sources/TFC/TFC_ADC.c **** 				{
 288:../Sources/TFC/TFC_ADC.c **** 				}
 289:../Sources/TFC/TFC_ADC.c **** 				
 290:../Sources/TFC/TFC_ADC.c **** 				TAOS_SI_LOW;
 891              		.loc 1 290 0 is_stmt 1
 892 009c 534B     		ldr	r3, .L38+20
 893 009e 8022     		mov	r2, #128
 894 00a0 9A60     		str	r2, [r3, #8]
 291:../Sources/TFC/TFC_ADC.c **** 
 292:../Sources/TFC/TFC_ADC.c **** 				
 293:../Sources/TFC/TFC_ADC.c **** 				CurrentLineScanPixel = 0;
 895              		.loc 1 293 0
 896 00a2 534B     		ldr	r3, .L38+24
 897 00a4 0022     		mov	r2, #0
 898 00a6 1A70     		strb	r2, [r3]
 294:../Sources/TFC/TFC_ADC.c **** 				CurrentLineScanChannel = 0;
 899              		.loc 1 294 0
 900 00a8 524B     		ldr	r3, .L38+28
 901 00aa 0022     		mov	r2, #0
 902 00ac 1A70     		strb	r2, [r3]
 295:../Sources/TFC/TFC_ADC.c **** 				CurrentADC_State = ADC_STATE_CAPTURE_LINE_SCAN;
 903              		.loc 1 295 0
 904 00ae 4A4B     		ldr	r3, .L38
 905 00b0 0422     		mov	r2, #4
 906 00b2 1A70     		strb	r2, [r3]
 296:../Sources/TFC/TFC_ADC.c **** 				ADC0_CFG2  |= ADC_CFG2_MUXSEL_MASK; //Select the B side of the mux
 907              		.loc 1 296 0
 908 00b4 494B     		ldr	r3, .L38+4
 909 00b6 494A     		ldr	r2, .L38+4
 910 00b8 D268     		ldr	r2, [r2, #12]
 911 00ba 1021     		mov	r1, #16
 912 00bc 0A43     		orr	r2, r1
 913 00be DA60     		str	r2, [r3, #12]
 297:../Sources/TFC/TFC_ADC.c **** 				ADC0_SC1A  =  TFC_LINESCAN0_ADC_CHANNEL | ADC_SC1_AIEN_MASK;
 914              		.loc 1 297 0
 915 00c0 464B     		ldr	r3, .L38+4
 916 00c2 4622     		mov	r2, #70
 917 00c4 1A60     		str	r2, [r3]
 298:../Sources/TFC/TFC_ADC.c **** 				
 299:../Sources/TFC/TFC_ADC.c **** 				break;
 918              		.loc 1 299 0
 919 00c6 83E0     		b	.L18
 920              	.L23:
 300:../Sources/TFC/TFC_ADC.c **** 		
 301:../Sources/TFC/TFC_ADC.c **** 		case ADC_STATE_CAPTURE_LINE_SCAN:
 302:../Sources/TFC/TFC_ADC.c **** 					
 303:../Sources/TFC/TFC_ADC.c **** 					if(CurrentLineScanPixel<129)
 921              		.loc 1 303 0
 922 00c8 494B     		ldr	r3, .L38+24
 923 00ca 1B78     		ldrb	r3, [r3]
 924 00cc DBB2     		uxtb	r3, r3
 925 00ce 802B     		cmp	r3, #128
 926 00d0 40D8     		bhi	.L28
 304:../Sources/TFC/TFC_ADC.c **** 					{
 305:../Sources/TFC/TFC_ADC.c **** 						if(CurrentLineScanChannel == 0)
 927              		.loc 1 305 0
 928 00d2 484B     		ldr	r3, .L38+28
 929 00d4 1B78     		ldrb	r3, [r3]
 930 00d6 DBB2     		uxtb	r3, r3
 931 00d8 002B     		cmp	r3, #0
 932 00da 10D1     		bne	.L29
 306:../Sources/TFC/TFC_ADC.c **** 						{
 307:../Sources/TFC/TFC_ADC.c **** 							LineScanImage0WorkingBuffer[CurrentLineScanPixel] = ADC0_RA;
 933              		.loc 1 307 0
 934 00dc 464B     		ldr	r3, .L38+32
 935 00de 1A68     		ldr	r2, [r3]
 936 00e0 434B     		ldr	r3, .L38+24
 937 00e2 1B78     		ldrb	r3, [r3]
 938 00e4 DBB2     		uxtb	r3, r3
 939 00e6 D218     		add	r2, r2, r3
 940 00e8 3C4B     		ldr	r3, .L38+4
 941 00ea 1B69     		ldr	r3, [r3, #16]
 942 00ec DBB2     		uxtb	r3, r3
 943 00ee 1370     		strb	r3, [r2]
 308:../Sources/TFC/TFC_ADC.c **** 							ADC0_SC1A  =  TFC_LINESCAN1_ADC_CHANNEL | ADC_SC1_AIEN_MASK;
 944              		.loc 1 308 0
 945 00f0 3A4B     		ldr	r3, .L38+4
 946 00f2 4722     		mov	r2, #71
 947 00f4 1A60     		str	r2, [r3]
 309:../Sources/TFC/TFC_ADC.c **** 							CurrentLineScanChannel = 1;
 948              		.loc 1 309 0
 949 00f6 3F4B     		ldr	r3, .L38+28
 950 00f8 0122     		mov	r2, #1
 951 00fa 1A70     		strb	r2, [r3]
 310:../Sources/TFC/TFC_ADC.c **** 							
 311:../Sources/TFC/TFC_ADC.c **** 						}
 312:../Sources/TFC/TFC_ADC.c **** 						else
 313:../Sources/TFC/TFC_ADC.c **** 						{
 314:../Sources/TFC/TFC_ADC.c **** 							LineScanImage1WorkingBuffer[CurrentLineScanPixel] = ADC0_RA;
 315:../Sources/TFC/TFC_ADC.c **** 							ADC0_SC1A  =  TFC_LINESCAN0_ADC_CHANNEL | ADC_SC1_AIEN_MASK;
 316:../Sources/TFC/TFC_ADC.c **** 							CurrentLineScanChannel = 0;
 317:../Sources/TFC/TFC_ADC.c **** 							CurrentLineScanPixel++;
 318:../Sources/TFC/TFC_ADC.c **** 							
 319:../Sources/TFC/TFC_ADC.c **** 							TAOS_CLK_LOW;
 320:../Sources/TFC/TFC_ADC.c **** 								for(Junk = 0;Junk<50;Junk++)
 321:../Sources/TFC/TFC_ADC.c **** 									{
 322:../Sources/TFC/TFC_ADC.c **** 									}
 323:../Sources/TFC/TFC_ADC.c **** 							TAOS_CLK_HIGH;
 324:../Sources/TFC/TFC_ADC.c **** 							
 325:../Sources/TFC/TFC_ADC.c **** 						}
 326:../Sources/TFC/TFC_ADC.c **** 						
 327:../Sources/TFC/TFC_ADC.c **** 					}
 328:../Sources/TFC/TFC_ADC.c **** 					else
 329:../Sources/TFC/TFC_ADC.c **** 					{
 330:../Sources/TFC/TFC_ADC.c **** 						// done with the capture sequence.  we can wait for the PIT0 IRQ to restart
 331:../Sources/TFC/TFC_ADC.c **** 					
 332:../Sources/TFC/TFC_ADC.c **** 						TAOS_CLK_HIGH;
 333:../Sources/TFC/TFC_ADC.c **** 											
 334:../Sources/TFC/TFC_ADC.c **** 						for(Junk = 0;Junk<50;Junk++)
 335:../Sources/TFC/TFC_ADC.c **** 							{
 336:../Sources/TFC/TFC_ADC.c **** 							}
 337:../Sources/TFC/TFC_ADC.c **** 						
 338:../Sources/TFC/TFC_ADC.c **** 						TAOS_CLK_LOW;
 339:../Sources/TFC/TFC_ADC.c **** 						CurrentADC_State = ADC_STATE_INIT;	 
 340:../Sources/TFC/TFC_ADC.c **** 						
 341:../Sources/TFC/TFC_ADC.c **** 						//swap the buffer
 342:../Sources/TFC/TFC_ADC.c **** 						
 343:../Sources/TFC/TFC_ADC.c **** 						if(LineScanWorkingBuffer == 0)
 344:../Sources/TFC/TFC_ADC.c **** 						{
 345:../Sources/TFC/TFC_ADC.c **** 							LineScanWorkingBuffer = 1;
 346:../Sources/TFC/TFC_ADC.c **** 							
 347:../Sources/TFC/TFC_ADC.c **** 							LineScanImage0WorkingBuffer = &LineScanImage0Buffer[1][0];
 348:../Sources/TFC/TFC_ADC.c **** 							LineScanImage1WorkingBuffer = &LineScanImage1Buffer[1][0];
 349:../Sources/TFC/TFC_ADC.c **** 							
 350:../Sources/TFC/TFC_ADC.c **** 							LineScanImage0 = &LineScanImage0Buffer[0][0];
 351:../Sources/TFC/TFC_ADC.c **** 							LineScanImage1 = &LineScanImage1Buffer[0][0];
 352:../Sources/TFC/TFC_ADC.c **** 						}
 353:../Sources/TFC/TFC_ADC.c **** 						else
 354:../Sources/TFC/TFC_ADC.c **** 						{
 355:../Sources/TFC/TFC_ADC.c **** 							LineScanWorkingBuffer = 0;
 356:../Sources/TFC/TFC_ADC.c **** 							LineScanImage0WorkingBuffer = &LineScanImage0Buffer[0][0];
 357:../Sources/TFC/TFC_ADC.c **** 							LineScanImage1WorkingBuffer = &LineScanImage1Buffer[0][0];
 358:../Sources/TFC/TFC_ADC.c **** 							
 359:../Sources/TFC/TFC_ADC.c **** 							LineScanImage0 = &LineScanImage0Buffer[1][0];
 360:../Sources/TFC/TFC_ADC.c **** 							LineScanImage1 = &LineScanImage1Buffer[1][0];
 361:../Sources/TFC/TFC_ADC.c **** 						}
 362:../Sources/TFC/TFC_ADC.c **** 						
 363:../Sources/TFC/TFC_ADC.c **** 						LineScanImageReady = TRUE;
 364:../Sources/TFC/TFC_ADC.c **** 					}
 365:../Sources/TFC/TFC_ADC.c **** 					
 366:../Sources/TFC/TFC_ADC.c **** 					break;
 952              		.loc 1 366 0
 953 00fc 67E0     		b	.L37
 954              	.L29:
 314:../Sources/TFC/TFC_ADC.c **** 							LineScanImage1WorkingBuffer[CurrentLineScanPixel] = ADC0_RA;
 955              		.loc 1 314 0
 956 00fe 3F4B     		ldr	r3, .L38+36
 957 0100 1A68     		ldr	r2, [r3]
 958 0102 3B4B     		ldr	r3, .L38+24
 959 0104 1B78     		ldrb	r3, [r3]
 960 0106 DBB2     		uxtb	r3, r3
 961 0108 D218     		add	r2, r2, r3
 962 010a 344B     		ldr	r3, .L38+4
 963 010c 1B69     		ldr	r3, [r3, #16]
 964 010e DBB2     		uxtb	r3, r3
 965 0110 1370     		strb	r3, [r2]
 315:../Sources/TFC/TFC_ADC.c **** 							ADC0_SC1A  =  TFC_LINESCAN0_ADC_CHANNEL | ADC_SC1_AIEN_MASK;
 966              		.loc 1 315 0
 967 0112 324B     		ldr	r3, .L38+4
 968 0114 4622     		mov	r2, #70
 969 0116 1A60     		str	r2, [r3]
 316:../Sources/TFC/TFC_ADC.c **** 							CurrentLineScanChannel = 0;
 970              		.loc 1 316 0
 971 0118 364B     		ldr	r3, .L38+28
 972 011a 0022     		mov	r2, #0
 973 011c 1A70     		strb	r2, [r3]
 317:../Sources/TFC/TFC_ADC.c **** 							CurrentLineScanPixel++;
 974              		.loc 1 317 0
 975 011e 344B     		ldr	r3, .L38+24
 976 0120 1B78     		ldrb	r3, [r3]
 977 0122 DBB2     		uxtb	r3, r3
 978 0124 0133     		add	r3, r3, #1
 979 0126 DAB2     		uxtb	r2, r3
 980 0128 314B     		ldr	r3, .L38+24
 981 012a 1A70     		strb	r2, [r3]
 319:../Sources/TFC/TFC_ADC.c **** 							TAOS_CLK_LOW;
 982              		.loc 1 319 0
 983 012c 2E4B     		ldr	r3, .L38+16
 984 012e 0222     		mov	r2, #2
 985 0130 9A60     		str	r2, [r3, #8]
 320:../Sources/TFC/TFC_ADC.c **** 								for(Junk = 0;Junk<50;Junk++)
 986              		.loc 1 320 0
 987 0132 FB1D     		add	r3, r7, #7
 988 0134 0022     		mov	r2, #0
 989 0136 1A70     		strb	r2, [r3]
 990 0138 04E0     		b	.L31
 991              	.L32:
 320:../Sources/TFC/TFC_ADC.c **** 								for(Junk = 0;Junk<50;Junk++)
 992              		.loc 1 320 0 is_stmt 0 discriminator 2
 993 013a FB1D     		add	r3, r7, #7
 994 013c FA1D     		add	r2, r7, #7
 995 013e 1278     		ldrb	r2, [r2]
 996 0140 0132     		add	r2, r2, #1
 997 0142 1A70     		strb	r2, [r3]
 998              	.L31:
 320:../Sources/TFC/TFC_ADC.c **** 								for(Junk = 0;Junk<50;Junk++)
 999              		.loc 1 320 0 discriminator 1
 1000 0144 FB1D     		add	r3, r7, #7
 1001 0146 1B78     		ldrb	r3, [r3]
 1002 0148 312B     		cmp	r3, #49
 1003 014a F6D9     		bls	.L32
 323:../Sources/TFC/TFC_ADC.c **** 							TAOS_CLK_HIGH;
 1004              		.loc 1 323 0 is_stmt 1
 1005 014c 264B     		ldr	r3, .L38+16
 1006 014e 0222     		mov	r2, #2
 1007 0150 5A60     		str	r2, [r3, #4]
 1008              		.loc 1 366 0
 1009 0152 3CE0     		b	.L37
 1010              	.L28:
 332:../Sources/TFC/TFC_ADC.c **** 						TAOS_CLK_HIGH;
 1011              		.loc 1 332 0
 1012 0154 244B     		ldr	r3, .L38+16
 1013 0156 0222     		mov	r2, #2
 1014 0158 5A60     		str	r2, [r3, #4]
 334:../Sources/TFC/TFC_ADC.c **** 						for(Junk = 0;Junk<50;Junk++)
 1015              		.loc 1 334 0
 1016 015a FB1D     		add	r3, r7, #7
 1017 015c 0022     		mov	r2, #0
 1018 015e 1A70     		strb	r2, [r3]
 1019 0160 04E0     		b	.L33
 1020              	.L34:
 334:../Sources/TFC/TFC_ADC.c **** 						for(Junk = 0;Junk<50;Junk++)
 1021              		.loc 1 334 0 is_stmt 0 discriminator 2
 1022 0162 FB1D     		add	r3, r7, #7
 1023 0164 FA1D     		add	r2, r7, #7
 1024 0166 1278     		ldrb	r2, [r2]
 1025 0168 0132     		add	r2, r2, #1
 1026 016a 1A70     		strb	r2, [r3]
 1027              	.L33:
 334:../Sources/TFC/TFC_ADC.c **** 						for(Junk = 0;Junk<50;Junk++)
 1028              		.loc 1 334 0 discriminator 1
 1029 016c FB1D     		add	r3, r7, #7
 1030 016e 1B78     		ldrb	r3, [r3]
 1031 0170 312B     		cmp	r3, #49
 1032 0172 F6D9     		bls	.L34
 338:../Sources/TFC/TFC_ADC.c **** 						TAOS_CLK_LOW;
 1033              		.loc 1 338 0 is_stmt 1
 1034 0174 1C4B     		ldr	r3, .L38+16
 1035 0176 0222     		mov	r2, #2
 1036 0178 9A60     		str	r2, [r3, #8]
 339:../Sources/TFC/TFC_ADC.c **** 						CurrentADC_State = ADC_STATE_INIT;	 
 1037              		.loc 1 339 0
 1038 017a 174B     		ldr	r3, .L38
 1039 017c 0022     		mov	r2, #0
 1040 017e 1A70     		strb	r2, [r3]
 343:../Sources/TFC/TFC_ADC.c **** 						if(LineScanWorkingBuffer == 0)
 1041              		.loc 1 343 0
 1042 0180 1F4B     		ldr	r3, .L38+40
 1043 0182 1B78     		ldrb	r3, [r3]
 1044 0184 DBB2     		uxtb	r3, r3
 1045 0186 002B     		cmp	r3, #0
 1046 0188 0FD1     		bne	.L35
 345:../Sources/TFC/TFC_ADC.c **** 							LineScanWorkingBuffer = 1;
 1047              		.loc 1 345 0
 1048 018a 1D4B     		ldr	r3, .L38+40
 1049 018c 0122     		mov	r2, #1
 1050 018e 1A70     		strb	r2, [r3]
 347:../Sources/TFC/TFC_ADC.c **** 							LineScanImage0WorkingBuffer = &LineScanImage0Buffer[1][0];
 1051              		.loc 1 347 0
 1052 0190 194B     		ldr	r3, .L38+32
 1053 0192 1C4A     		ldr	r2, .L38+44
 1054 0194 1A60     		str	r2, [r3]
 348:../Sources/TFC/TFC_ADC.c **** 							LineScanImage1WorkingBuffer = &LineScanImage1Buffer[1][0];
 1055              		.loc 1 348 0
 1056 0196 194B     		ldr	r3, .L38+36
 1057 0198 1B4A     		ldr	r2, .L38+48
 1058 019a 1A60     		str	r2, [r3]
 350:../Sources/TFC/TFC_ADC.c **** 							LineScanImage0 = &LineScanImage0Buffer[0][0];
 1059              		.loc 1 350 0
 1060 019c 1B4B     		ldr	r3, .L38+52
 1061 019e 1C4A     		ldr	r2, .L38+56
 1062 01a0 1A60     		str	r2, [r3]
 351:../Sources/TFC/TFC_ADC.c **** 							LineScanImage1 = &LineScanImage1Buffer[0][0];
 1063              		.loc 1 351 0
 1064 01a2 1C4B     		ldr	r3, .L38+60
 1065 01a4 1C4A     		ldr	r2, .L38+64
 1066 01a6 1A60     		str	r2, [r3]
 1067 01a8 0EE0     		b	.L36
 1068              	.L35:
 355:../Sources/TFC/TFC_ADC.c **** 							LineScanWorkingBuffer = 0;
 1069              		.loc 1 355 0
 1070 01aa 154B     		ldr	r3, .L38+40
 1071 01ac 0022     		mov	r2, #0
 1072 01ae 1A70     		strb	r2, [r3]
 356:../Sources/TFC/TFC_ADC.c **** 							LineScanImage0WorkingBuffer = &LineScanImage0Buffer[0][0];
 1073              		.loc 1 356 0
 1074 01b0 114B     		ldr	r3, .L38+32
 1075 01b2 174A     		ldr	r2, .L38+56
 1076 01b4 1A60     		str	r2, [r3]
 357:../Sources/TFC/TFC_ADC.c **** 							LineScanImage1WorkingBuffer = &LineScanImage1Buffer[0][0];
 1077              		.loc 1 357 0
 1078 01b6 114B     		ldr	r3, .L38+36
 1079 01b8 174A     		ldr	r2, .L38+64
 1080 01ba 1A60     		str	r2, [r3]
 359:../Sources/TFC/TFC_ADC.c **** 							LineScanImage0 = &LineScanImage0Buffer[1][0];
 1081              		.loc 1 359 0
 1082 01bc 134B     		ldr	r3, .L38+52
 1083 01be 114A     		ldr	r2, .L38+44
 1084 01c0 1A60     		str	r2, [r3]
 360:../Sources/TFC/TFC_ADC.c **** 							LineScanImage1 = &LineScanImage1Buffer[1][0];
 1085              		.loc 1 360 0
 1086 01c2 144B     		ldr	r3, .L38+60
 1087 01c4 104A     		ldr	r2, .L38+48
 1088 01c6 1A60     		str	r2, [r3]
 1089              	.L36:
 363:../Sources/TFC/TFC_ADC.c **** 						LineScanImageReady = TRUE;
 1090              		.loc 1 363 0
 1091 01c8 144B     		ldr	r3, .L38+68
 1092 01ca 0122     		mov	r2, #1
 1093 01cc 1A70     		strb	r2, [r3]
 1094              	.L37:
 1095              		.loc 1 366 0
 1096 01ce C046     		mov	r8, r8
 1097              	.L18:
 367:../Sources/TFC/TFC_ADC.c **** 	
 368:../Sources/TFC/TFC_ADC.c **** 	}
 369:../Sources/TFC/TFC_ADC.c **** 
 370:../Sources/TFC/TFC_ADC.c **** }
 1098              		.loc 1 370 0
 1099 01d0 BD46     		mov	sp, r7
 1100 01d2 02B0     		add	sp, sp, #8
 1101              		@ sp needed for prologue
 1102 01d4 80BD     		pop	{r7, pc}
 1103              	.L39:
 1104 01d6 C046     		.align	2
 1105              	.L38:
 1106 01d8 00000000 		.word	CurrentADC_State
 1107 01dc 00B00340 		.word	1073983488
 1108 01e0 00000000 		.word	PotADC_Value
 1109 01e4 00000000 		.word	BatSenseADC_Value
 1110 01e8 00F10F40 		.word	1074786560
 1111 01ec C0F00F40 		.word	1074786496
 1112 01f0 00000000 		.word	CurrentLineScanPixel
 1113 01f4 00000000 		.word	CurrentLineScanChannel
 1114 01f8 00000000 		.word	LineScanImage0WorkingBuffer
 1115 01fc 00000000 		.word	LineScanImage1WorkingBuffer
 1116 0200 00000000 		.word	LineScanWorkingBuffer
 1117 0204 80000000 		.word	LineScanImage0Buffer+128
 1118 0208 80000000 		.word	LineScanImage1Buffer+128
 1119 020c 00000000 		.word	LineScanImage0
 1120 0210 00000000 		.word	LineScanImage0Buffer
 1121 0214 00000000 		.word	LineScanImage1
 1122 0218 00000000 		.word	LineScanImage1Buffer
 1123 021c 00000000 		.word	LineScanImageReady
 1124              		.cfi_endproc
 1125              	.LFE6:
 1127              		.text
 1128              	.Letext0:
 1129              		.file 2 "C:/Freescale/CW MCU v10.3/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 1130              		.file 3 "C:/Users/plexu_000/Dropbox/FRDM-TFC/SRC/FRDM-TFC/Project_Headers/MKL25Z4.h"
 1131              		.file 4 "C:/Users/plexu_000/Dropbox/FRDM-TFC/SRC/FRDM-TFC/Project_Headers/TFC\\TFC_ADC.h"
 1132              		.file 5 "C:/Users/plexu_000/Dropbox/FRDM-TFC/SRC/FRDM-TFC/Project_Headers/TFC\\TFC_LineScanCamera.
DEFINED SYMBOLS
                            *ABS*:00000000 TFC_ADC.c
                            *COM*:00000002 PotADC_Value
                            *COM*:00000001 BatSenseADC_Value
C:\Users\PLEXU_~1\AppData\Local\Temp\cctttAad.s:22     .bss.CurrentADC_State:00000000 CurrentADC_State
C:\Users\PLEXU_~1\AppData\Local\Temp\cctttAad.s:23     .bss.CurrentADC_State:00000000 $d
C:\Users\PLEXU_~1\AppData\Local\Temp\cctttAad.s:28     .bss.CurrentLineScanPixel:00000000 CurrentLineScanPixel
C:\Users\PLEXU_~1\AppData\Local\Temp\cctttAad.s:29     .bss.CurrentLineScanPixel:00000000 $d
C:\Users\PLEXU_~1\AppData\Local\Temp\cctttAad.s:34     .bss.CurrentLineScanChannel:00000000 CurrentLineScanChannel
C:\Users\PLEXU_~1\AppData\Local\Temp\cctttAad.s:35     .bss.CurrentLineScanChannel:00000000 $d
C:\Users\PLEXU_~1\AppData\Local\Temp\cctttAad.s:37     .text.ADC_Cal:00000000 $t
C:\Users\PLEXU_~1\AppData\Local\Temp\cctttAad.s:42     .text.ADC_Cal:00000000 ADC_Cal
C:\Users\PLEXU_~1\AppData\Local\Temp\cctttAad.s:313    .text.ADC_Cal:000001b8 $d
C:\Users\PLEXU_~1\AppData\Local\Temp\cctttAad.s:318    .text.ADC_Config_Alt:00000000 $t
C:\Users\PLEXU_~1\AppData\Local\Temp\cctttAad.s:323    .text.ADC_Config_Alt:00000000 ADC_Config_Alt
C:\Users\PLEXU_~1\AppData\Local\Temp\cctttAad.s:397    .text.ADC_Read_Cal:00000000 $t
C:\Users\PLEXU_~1\AppData\Local\Temp\cctttAad.s:402    .text.ADC_Read_Cal:00000000 ADC_Read_Cal
C:\Users\PLEXU_~1\AppData\Local\Temp\cctttAad.s:530    .text.InitADC0:00000000 $t
C:\Users\PLEXU_~1\AppData\Local\Temp\cctttAad.s:535    .text.InitADC0:00000000 InitADC0
C:\Users\PLEXU_~1\AppData\Local\Temp\cctttAad.s:628    .text.InitADC0:00000084 $d
C:\Users\PLEXU_~1\AppData\Local\Temp\cctttAad.s:635    .text.TFC_InitADCs:00000000 $t
C:\Users\PLEXU_~1\AppData\Local\Temp\cctttAad.s:640    .text.TFC_InitADCs:00000000 TFC_InitADCs
C:\Users\PLEXU_~1\AppData\Local\Temp\cctttAad.s:705    .text.TFC_InitADCs:0000005c $d
C:\Users\PLEXU_~1\AppData\Local\Temp\cctttAad.s:714    .text.PIT_IRQHandler:00000000 $t
C:\Users\PLEXU_~1\AppData\Local\Temp\cctttAad.s:719    .text.PIT_IRQHandler:00000000 PIT_IRQHandler
C:\Users\PLEXU_~1\AppData\Local\Temp\cctttAad.s:763    .text.PIT_IRQHandler:00000030 $d
C:\Users\PLEXU_~1\AppData\Local\Temp\cctttAad.s:771    .text.ADC0_IRQHandler:00000000 $t
C:\Users\PLEXU_~1\AppData\Local\Temp\cctttAad.s:776    .text.ADC0_IRQHandler:00000000 ADC0_IRQHandler
C:\Users\PLEXU_~1\AppData\Local\Temp\cctttAad.s:1106   .text.ADC0_IRQHandler:000001d8 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
disable_irq
TFC_SetLineScanExposureTime
enable_irq
LineScanImage0WorkingBuffer
LineScanImage1WorkingBuffer
LineScanWorkingBuffer
LineScanImage0Buffer
LineScanImage1Buffer
LineScanImage0
LineScanImage1
LineScanImageReady
