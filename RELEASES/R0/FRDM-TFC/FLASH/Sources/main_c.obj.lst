   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata
  18              		.align	2
  19              	.LC3:
  20 0000 0D0A00   		.ascii	"\015\012\000"
  21 0003 00       		.align	2
  22              	.LC5:
  23 0004 4C3A00   		.ascii	"L:\000"
  24 0007 00       		.align	2
  25              	.LC8:
  26 0008 25582C00 		.ascii	"%X,\000"
  27              		.align	2
  28              	.LC11:
  29 000c 255800   		.ascii	"%X\000"
  30 000f 00       		.align	2
  31              	.LC13:
  32 0010 2C00     		.ascii	",\000"
  33 0012 0000     		.section	.text.main,"ax",%progbits
  34              		.align	2
  35              		.global	main
  36              		.code	16
  37              		.thumb_func
  39              	main:
  40              	.LFB0:
  41              		.file 1 "../Sources/main.c"
   1:../Sources/main.c **** #include "derivative.h" /* include peripheral declarations */
   2:../Sources/main.c **** #include "TFC\TFC.h"
   3:../Sources/main.c **** 
   4:../Sources/main.c **** 
   5:../Sources/main.c **** int main(void)
   6:../Sources/main.c **** {
  42              		.loc 1 6 0
  43              		.cfi_startproc
  44 0000 90B5     		push	{r4, r7, lr}
  45              	.LCFI0:
  46              		.cfi_def_cfa_offset 12
  47              		.cfi_offset 4, -12
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 83B0     		sub	sp, sp, #12
  51              	.LCFI1:
  52              		.cfi_def_cfa_offset 24
  53 0004 00AF     		add	r7, sp, #0
  54              	.LCFI2:
  55              		.cfi_def_cfa_register 7
   7:../Sources/main.c **** 	uint32_t t,i=0;
  56              		.loc 1 7 0
  57 0006 0023     		mov	r3, #0
  58 0008 3B60     		str	r3, [r7]
   8:../Sources/main.c **** 	TFC_Init();
  59              		.loc 1 8 0
  60 000a FFF7FEFF 		bl	TFC_Init
  61              	.L29:
   9:../Sources/main.c **** 	
  10:../Sources/main.c **** 	
  11:../Sources/main.c **** 	for(;;)
  12:../Sources/main.c **** 	{	   
  13:../Sources/main.c **** 		//TFC_Task must be called in your main loop.  This keeps certain processing happy (I.E. Serial po
  14:../Sources/main.c **** 			TFC_Task();
  62              		.loc 1 14 0
  63 000e FFF7FEFF 		bl	TFC_Task
  15:../Sources/main.c **** 
  16:../Sources/main.c **** 			//This Demo program will look at the middle 2 switch to select one of 4 demo modes.
  17:../Sources/main.c **** 			//Let's look at the middle 2 switches
  18:../Sources/main.c **** 			switch((TFC_GetDIP_Switch()>>1)&0x03)
  64              		.loc 1 18 0
  65 0012 FFF7FEFF 		bl	TFC_GetDIP_Switch
  66 0016 031C     		mov	r3, r0
  67 0018 5B08     		lsr	r3, r3, #1
  68 001a DBB2     		uxtb	r3, r3
  69 001c 1A1C     		mov	r2, r3
  70 001e 0323     		mov	r3, #3
  71 0020 1340     		and	r3, r2
  72 0022 022B     		cmp	r3, #2
  73 0024 00D1     		bne	.LCB20
  74 0026 7FE0     		b	.L4	@long jump
  75              	.LCB20:
  76 0028 032B     		cmp	r3, #3
  77 002a 00D1     		bne	.LCB22
  78 002c A0E0     		b	.L5	@long jump
  79              	.LCB22:
  80 002e 012B     		cmp	r3, #1
  81 0030 46D0     		beq	.L3
  19:../Sources/main.c **** 			{
  20:../Sources/main.c **** 			default:
  21:../Sources/main.c **** 			case 0 :
  22:../Sources/main.c **** 				//Demo mode 0 just tests the switches and LED's
  23:../Sources/main.c **** 				if(TFC_PUSH_BUTTON_0_PRESSED)
  82              		.loc 1 23 0
  83 0032 8C4B     		ldr	r3, .L32
  84 0034 1B69     		ldr	r3, [r3, #16]
  85 0036 1A1C     		mov	r2, r3
  86 0038 8023     		mov	r3, #128
  87 003a 9B01     		lsl	r3, r3, #6
  88 003c 1340     		and	r3, r2
  89 003e 04D0     		beq	.L6
  24:../Sources/main.c **** 					TFC_BAT_LED0_ON;
  90              		.loc 1 24 0
  91 0040 894B     		ldr	r3, .L32+4
  92 0042 8022     		mov	r2, #128
  93 0044 5200     		lsl	r2, r2, #1
  94 0046 5A60     		str	r2, [r3, #4]
  95 0048 03E0     		b	.L7
  96              	.L6:
  25:../Sources/main.c **** 				else
  26:../Sources/main.c **** 					TFC_BAT_LED0_OFF;
  97              		.loc 1 26 0
  98 004a 874B     		ldr	r3, .L32+4
  99 004c 8022     		mov	r2, #128
 100 004e 5200     		lsl	r2, r2, #1
 101 0050 9A60     		str	r2, [r3, #8]
 102              	.L7:
  27:../Sources/main.c **** 				
  28:../Sources/main.c **** 				if(TFC_PUSH_BUTTON_1_PRESSED)
 103              		.loc 1 28 0
 104 0052 844B     		ldr	r3, .L32
 105 0054 1B69     		ldr	r3, [r3, #16]
 106 0056 1A1C     		mov	r2, r3
 107 0058 8023     		mov	r3, #128
 108 005a 9B02     		lsl	r3, r3, #10
 109 005c 1340     		and	r3, r2
 110 005e 04D0     		beq	.L8
  29:../Sources/main.c **** 					TFC_BAT_LED3_ON;
 111              		.loc 1 29 0
 112 0060 814B     		ldr	r3, .L32+4
 113 0062 8022     		mov	r2, #128
 114 0064 1201     		lsl	r2, r2, #4
 115 0066 5A60     		str	r2, [r3, #4]
 116 0068 03E0     		b	.L9
 117              	.L8:
  30:../Sources/main.c **** 				else
  31:../Sources/main.c **** 					TFC_BAT_LED3_OFF;
 118              		.loc 1 31 0
 119 006a 7F4B     		ldr	r3, .L32+4
 120 006c 8022     		mov	r2, #128
 121 006e 1201     		lsl	r2, r2, #4
 122 0070 9A60     		str	r2, [r3, #8]
 123              	.L9:
  32:../Sources/main.c **** 				
  33:../Sources/main.c **** 				
  34:../Sources/main.c **** 				if(TFC_GetDIP_Switch()&0x01)
 124              		.loc 1 34 0
 125 0072 FFF7FEFF 		bl	TFC_GetDIP_Switch
 126 0076 031C     		mov	r3, r0
 127 0078 1A1C     		mov	r2, r3
 128 007a 0123     		mov	r3, #1
 129 007c 1340     		and	r3, r2
 130 007e DBB2     		uxtb	r3, r3
 131 0080 002B     		cmp	r3, #0
 132 0082 04D0     		beq	.L10
  35:../Sources/main.c **** 					TFC_BAT_LED1_ON;
 133              		.loc 1 35 0
 134 0084 784B     		ldr	r3, .L32+4
 135 0086 8022     		mov	r2, #128
 136 0088 9200     		lsl	r2, r2, #2
 137 008a 5A60     		str	r2, [r3, #4]
 138 008c 03E0     		b	.L11
 139              	.L10:
  36:../Sources/main.c **** 				else
  37:../Sources/main.c **** 					TFC_BAT_LED1_OFF;
 140              		.loc 1 37 0
 141 008e 764B     		ldr	r3, .L32+4
 142 0090 8022     		mov	r2, #128
 143 0092 9200     		lsl	r2, r2, #2
 144 0094 9A60     		str	r2, [r3, #8]
 145              	.L11:
  38:../Sources/main.c **** 				
  39:../Sources/main.c **** 				if(TFC_GetDIP_Switch()&0x08)
 146              		.loc 1 39 0
 147 0096 FFF7FEFF 		bl	TFC_GetDIP_Switch
 148 009a 031C     		mov	r3, r0
 149 009c 1A1C     		mov	r2, r3
 150 009e 0823     		mov	r3, #8
 151 00a0 1340     		and	r3, r2
 152 00a2 04D0     		beq	.L12
  40:../Sources/main.c **** 					TFC_BAT_LED2_ON;
 153              		.loc 1 40 0
 154 00a4 704B     		ldr	r3, .L32+4
 155 00a6 8022     		mov	r2, #128
 156 00a8 D200     		lsl	r2, r2, #3
 157 00aa 5A60     		str	r2, [r3, #4]
 158 00ac 03E0     		b	.L13
 159              	.L12:
  41:../Sources/main.c **** 				else
  42:../Sources/main.c **** 					TFC_BAT_LED2_OFF;
 160              		.loc 1 42 0
 161 00ae 6E4B     		ldr	r3, .L32+4
 162 00b0 8022     		mov	r2, #128
 163 00b2 D200     		lsl	r2, r2, #3
 164 00b4 9A60     		str	r2, [r3, #8]
 165              	.L13:
  43:../Sources/main.c **** 								
  44:../Sources/main.c **** 					
  45:../Sources/main.c **** 				//TFC_SetMotorPWM(0,0); //Make sure motors are off
  46:../Sources/main.c **** 				TFC_HBRIDGE_DISABLE;
 166              		.loc 1 46 0
 167 00b6 6D4B     		ldr	r3, .L32+8
 168 00b8 8022     		mov	r2, #128
 169 00ba 9203     		lsl	r2, r2, #14
 170 00bc 9A60     		str	r2, [r3, #8]
  47:../Sources/main.c **** 			
  48:../Sources/main.c **** 				
  49:../Sources/main.c **** 				break;
 171              		.loc 1 49 0
 172 00be CFE0     		b	.L14
 173              	.L3:
  50:../Sources/main.c **** 					
  51:../Sources/main.c **** 			case 1:
  52:../Sources/main.c **** 				
  53:../Sources/main.c **** 				//Demo mode 1 will just move the servos with the on-board potentiometers
  54:../Sources/main.c **** 				if(TFC_Ticker[0]>=20)
 174              		.loc 1 54 0
 175 00c0 6B4B     		ldr	r3, .L32+12
 176 00c2 1B68     		ldr	r3, [r3]
 177 00c4 132B     		cmp	r3, #19
 178 00c6 10D9     		bls	.L15
  55:../Sources/main.c **** 				{
  56:../Sources/main.c **** 					TFC_Ticker[0] = 0; //reset the Ticker
 179              		.loc 1 56 0
 180 00c8 694B     		ldr	r3, .L32+12
 181 00ca 0022     		mov	r2, #0
 182 00cc 1A60     		str	r2, [r3]
  57:../Sources/main.c **** 					//Every 20 mSeconds, update the Servos
  58:../Sources/main.c **** 					TFC_SetServo(0,TFC_ReadPot0());
 183              		.loc 1 58 0
 184 00ce FFF7FEFF 		bl	TFC_ReadPot0
 185 00d2 031C     		add	r3, r0, #0
 186 00d4 0020     		mov	r0, #0
 187 00d6 191C     		add	r1, r3, #0
 188 00d8 FFF7FEFF 		bl	TFC_SetServo
  59:../Sources/main.c **** 					TFC_SetServo(1,TFC_ReadPot1());
 189              		.loc 1 59 0
 190 00dc FFF7FEFF 		bl	TFC_ReadPot1
 191 00e0 031C     		add	r3, r0, #0
 192 00e2 0120     		mov	r0, #1
 193 00e4 191C     		add	r1, r3, #0
 194 00e6 FFF7FEFF 		bl	TFC_SetServo
 195              	.L15:
  60:../Sources/main.c **** 				}
  61:../Sources/main.c **** 				//Let's put a pattern on the LEDs
  62:../Sources/main.c **** 				if(TFC_Ticker[1] >= 125)
 196              		.loc 1 62 0
 197 00ea 614B     		ldr	r3, .L32+12
 198 00ec 5B68     		ldr	r3, [r3, #4]
 199 00ee 7C2B     		cmp	r3, #124
 200 00f0 0FD9     		bls	.L16
  63:../Sources/main.c **** 				{
  64:../Sources/main.c **** 					TFC_Ticker[1] = 0;
 201              		.loc 1 64 0
 202 00f2 5F4B     		ldr	r3, .L32+12
 203 00f4 0022     		mov	r2, #0
 204 00f6 5A60     		str	r2, [r3, #4]
  65:../Sources/main.c **** 					t++;
 205              		.loc 1 65 0
 206 00f8 7B68     		ldr	r3, [r7, #4]
 207 00fa 0133     		add	r3, r3, #1
 208 00fc 7B60     		str	r3, [r7, #4]
  66:../Sources/main.c **** 					if(t>4)
 209              		.loc 1 66 0
 210 00fe 7B68     		ldr	r3, [r7, #4]
 211 0100 042B     		cmp	r3, #4
 212 0102 01D9     		bls	.L17
  67:../Sources/main.c **** 					{
  68:../Sources/main.c **** 						t=0;
 213              		.loc 1 68 0
 214 0104 0023     		mov	r3, #0
 215 0106 7B60     		str	r3, [r7, #4]
 216              	.L17:
  69:../Sources/main.c **** 					}			
  70:../Sources/main.c **** 					TFC_SetBatteryLED_Level(t);
 217              		.loc 1 70 0
 218 0108 7B68     		ldr	r3, [r7, #4]
 219 010a DBB2     		uxtb	r3, r3
 220 010c 181C     		mov	r0, r3
 221 010e FFF7FEFF 		bl	TFC_SetBatteryLED_Level
 222              	.L16:
  71:../Sources/main.c **** 				}
  72:../Sources/main.c **** 				
  73:../Sources/main.c **** 				TFC_SetMotorPWM(0,0); //Make sure motors are off
 223              		.loc 1 73 0
 224 0112 584A     		ldr	r2, .L32+16
 225 0114 574B     		ldr	r3, .L32+16
 226 0116 101C     		add	r0, r2, #0
 227 0118 191C     		add	r1, r3, #0
 228 011a FFF7FEFF 		bl	TFC_SetMotorPWM
  74:../Sources/main.c **** 				TFC_HBRIDGE_DISABLE;
 229              		.loc 1 74 0
 230 011e 534B     		ldr	r3, .L32+8
 231 0120 8022     		mov	r2, #128
 232 0122 9203     		lsl	r2, r2, #14
 233 0124 9A60     		str	r2, [r3, #8]
  75:../Sources/main.c **** 			
  76:../Sources/main.c **** 
  77:../Sources/main.c **** 				break;
 234              		.loc 1 77 0
 235 0126 9BE0     		b	.L14
 236              	.L4:
  78:../Sources/main.c **** 				
  79:../Sources/main.c **** 			case 2 :
  80:../Sources/main.c **** 				
  81:../Sources/main.c **** 				//Demo Mode 2 will use the Pots to make the motors move
  82:../Sources/main.c **** 				TFC_HBRIDGE_ENABLE;
 237              		.loc 1 82 0
 238 0128 504B     		ldr	r3, .L32+8
 239 012a 8022     		mov	r2, #128
 240 012c 9203     		lsl	r2, r2, #14
 241 012e 5A60     		str	r2, [r3, #4]
  83:../Sources/main.c **** 				TFC_SetMotorPWM(TFC_ReadPot0(),TFC_ReadPot1());
 242              		.loc 1 83 0
 243 0130 FFF7FEFF 		bl	TFC_ReadPot0
 244 0134 041C     		add	r4, r0, #0
 245 0136 FFF7FEFF 		bl	TFC_ReadPot1
 246 013a 031C     		add	r3, r0, #0
 247 013c 201C     		add	r0, r4, #0
 248 013e 191C     		add	r1, r3, #0
 249 0140 FFF7FEFF 		bl	TFC_SetMotorPWM
  84:../Sources/main.c **** 						
  85:../Sources/main.c **** 				//Let's put a pattern on the LEDs
  86:../Sources/main.c **** 				if(TFC_Ticker[1] >= 125)
 250              		.loc 1 86 0
 251 0144 4A4B     		ldr	r3, .L32+12
 252 0146 5B68     		ldr	r3, [r3, #4]
 253 0148 7C2B     		cmp	r3, #124
 254 014a 00D8     		bhi	.LCB189
 255 014c 85E0     		b	.L30	@long jump
 256              	.LCB189:
  87:../Sources/main.c **** 					{
  88:../Sources/main.c **** 						TFC_Ticker[1] = 0;
 257              		.loc 1 88 0
 258 014e 484B     		ldr	r3, .L32+12
 259 0150 0022     		mov	r2, #0
 260 0152 5A60     		str	r2, [r3, #4]
  89:../Sources/main.c **** 							t++;
 261              		.loc 1 89 0
 262 0154 7B68     		ldr	r3, [r7, #4]
 263 0156 0133     		add	r3, r3, #1
 264 0158 7B60     		str	r3, [r7, #4]
  90:../Sources/main.c **** 							if(t>4)
 265              		.loc 1 90 0
 266 015a 7B68     		ldr	r3, [r7, #4]
 267 015c 042B     		cmp	r3, #4
 268 015e 01D9     		bls	.L19
  91:../Sources/main.c **** 							{
  92:../Sources/main.c **** 								t=0;
 269              		.loc 1 92 0
 270 0160 0023     		mov	r3, #0
 271 0162 7B60     		str	r3, [r7, #4]
 272              	.L19:
  93:../Sources/main.c **** 							}			
  94:../Sources/main.c **** 						TFC_SetBatteryLED_Level(t);
 273              		.loc 1 94 0
 274 0164 7B68     		ldr	r3, [r7, #4]
 275 0166 DBB2     		uxtb	r3, r3
 276 0168 181C     		mov	r0, r3
 277 016a FFF7FEFF 		bl	TFC_SetBatteryLED_Level
  95:../Sources/main.c **** 					}
  96:../Sources/main.c **** 				break;
 278              		.loc 1 96 0
 279 016e 74E0     		b	.L30
 280              	.L5:
  97:../Sources/main.c **** 			
  98:../Sources/main.c **** 			case 3 :
  99:../Sources/main.c **** 			
 100:../Sources/main.c **** 				//Demo Mode 3 will be in Freescale Garage Mode.  It will beam data from the Camera to the 
 101:../Sources/main.c **** 				//Labview Application
 102:../Sources/main.c **** 				
 103:../Sources/main.c **** 		
 104:../Sources/main.c **** 				if(TFC_Ticker[0]>100 && LineScanImageReady==1)
 281              		.loc 1 104 0
 282 0170 3F4B     		ldr	r3, .L32+12
 283 0172 1B68     		ldr	r3, [r3]
 284 0174 642B     		cmp	r3, #100
 285 0176 00D8     		bhi	.LCB214
 286 0178 71E0     		b	.L31	@long jump
 287              	.LCB214:
 288              		.loc 1 104 0 is_stmt 0 discriminator 1
 289 017a 3F4B     		ldr	r3, .L32+20
 290 017c 1B78     		ldrb	r3, [r3]
 291 017e DBB2     		uxtb	r3, r3
 292 0180 012B     		cmp	r3, #1
 293 0182 6CD1     		bne	.L31
 105:../Sources/main.c **** 					{
 106:../Sources/main.c **** 					 TFC_Ticker[0] = 0;
 294              		.loc 1 106 0 is_stmt 1
 295 0184 3A4B     		ldr	r3, .L32+12
 296 0186 0022     		mov	r2, #0
 297 0188 1A60     		str	r2, [r3]
 107:../Sources/main.c **** 					 LineScanImageReady=0;
 298              		.loc 1 107 0
 299 018a 3B4B     		ldr	r3, .L32+20
 300 018c 0022     		mov	r2, #0
 301 018e 1A70     		strb	r2, [r3]
 108:../Sources/main.c **** 					 TERMINAL_PRINTF("\r\n");
 302              		.loc 1 108 0
 303 0190 3A4A     		ldr	r2, .L32+24
 304 0192 3B4B     		ldr	r3, .L32+28
 305 0194 101C     		mov	r0, r2
 306 0196 191C     		mov	r1, r3
 307 0198 FFF7FEFF 		bl	Qprintf
 109:../Sources/main.c **** 					 TERMINAL_PRINTF("L:");
 308              		.loc 1 109 0
 309 019c 374A     		ldr	r2, .L32+24
 310 019e 394B     		ldr	r3, .L32+32
 311 01a0 101C     		mov	r0, r2
 312 01a2 191C     		mov	r1, r3
 313 01a4 FFF7FEFF 		bl	Qprintf
 110:../Sources/main.c **** 					 
 111:../Sources/main.c **** 					 	if(t==0)
 314              		.loc 1 111 0
 315 01a8 7B68     		ldr	r3, [r7, #4]
 316 01aa 002B     		cmp	r3, #0
 317 01ac 02D1     		bne	.L21
 112:../Sources/main.c **** 					 		t=3;
 318              		.loc 1 112 0
 319 01ae 0323     		mov	r3, #3
 320 01b0 7B60     		str	r3, [r7, #4]
 321 01b2 02E0     		b	.L22
 322              	.L21:
 113:../Sources/main.c **** 					 	else
 114:../Sources/main.c **** 					 		t--;
 323              		.loc 1 114 0
 324 01b4 7B68     		ldr	r3, [r7, #4]
 325 01b6 013B     		sub	r3, r3, #1
 326 01b8 7B60     		str	r3, [r7, #4]
 327              	.L22:
 115:../Sources/main.c **** 					 	
 116:../Sources/main.c **** 						 TFC_SetBatteryLED_Level(t);
 328              		.loc 1 116 0
 329 01ba 7B68     		ldr	r3, [r7, #4]
 330 01bc DBB2     		uxtb	r3, r3
 331 01be 181C     		mov	r0, r3
 332 01c0 FFF7FEFF 		bl	TFC_SetBatteryLED_Level
 117:../Sources/main.c **** 						
 118:../Sources/main.c **** 						 for(i=0;i<128;i++)
 333              		.loc 1 118 0
 334 01c4 0023     		mov	r3, #0
 335 01c6 3B60     		str	r3, [r7]
 336 01c8 0FE0     		b	.L23
 337              	.L24:
 119:../Sources/main.c **** 						 {
 120:../Sources/main.c **** 								 TERMINAL_PRINTF("%X,",LineScanImage0[i]);
 338              		.loc 1 120 0 discriminator 2
 339 01ca 2F4B     		ldr	r3, .L32+36
 340 01cc 1A68     		ldr	r2, [r3]
 341 01ce 3B68     		ldr	r3, [r7]
 342 01d0 D318     		add	r3, r2, r3
 343 01d2 1B78     		ldrb	r3, [r3]
 344 01d4 DBB2     		uxtb	r3, r3
 345 01d6 2949     		ldr	r1, .L32+24
 346 01d8 2C4A     		ldr	r2, .L32+40
 347 01da 081C     		mov	r0, r1
 348 01dc 111C     		mov	r1, r2
 349 01de 1A1C     		mov	r2, r3
 350 01e0 FFF7FEFF 		bl	Qprintf
 118:../Sources/main.c **** 						 for(i=0;i<128;i++)
 351              		.loc 1 118 0 discriminator 2
 352 01e4 3B68     		ldr	r3, [r7]
 353 01e6 0133     		add	r3, r3, #1
 354 01e8 3B60     		str	r3, [r7]
 355              	.L23:
 118:../Sources/main.c **** 						 for(i=0;i<128;i++)
 356              		.loc 1 118 0 is_stmt 0 discriminator 1
 357 01ea 3B68     		ldr	r3, [r7]
 358 01ec 7F2B     		cmp	r3, #127
 359 01ee ECD9     		bls	.L24
 121:../Sources/main.c **** 						 }
 122:../Sources/main.c **** 						
 123:../Sources/main.c **** 						 for(i=0;i<128;i++)
 360              		.loc 1 123 0 is_stmt 1
 361 01f0 0023     		mov	r3, #0
 362 01f2 3B60     		str	r3, [r7]
 363 01f4 2DE0     		b	.L25
 364              	.L28:
 124:../Sources/main.c **** 						 {
 125:../Sources/main.c **** 								 TERMINAL_PRINTF("%X",LineScanImage1[i]);
 365              		.loc 1 125 0
 366 01f6 264B     		ldr	r3, .L32+44
 367 01f8 1A68     		ldr	r2, [r3]
 368 01fa 3B68     		ldr	r3, [r7]
 369 01fc D318     		add	r3, r2, r3
 370 01fe 1B78     		ldrb	r3, [r3]
 371 0200 DBB2     		uxtb	r3, r3
 372 0202 1E49     		ldr	r1, .L32+24
 373 0204 234A     		ldr	r2, .L32+48
 374 0206 081C     		mov	r0, r1
 375 0208 111C     		mov	r1, r2
 376 020a 1A1C     		mov	r2, r3
 377 020c FFF7FEFF 		bl	Qprintf
 126:../Sources/main.c **** 								 if(i==127)
 378              		.loc 1 126 0
 379 0210 3B68     		ldr	r3, [r7]
 380 0212 7F2B     		cmp	r3, #127
 381 0214 0DD1     		bne	.L26
 127:../Sources/main.c **** 									 TERMINAL_PRINTF("\r\n",LineScanImage1[i]);
 382              		.loc 1 127 0
 383 0216 1E4B     		ldr	r3, .L32+44
 384 0218 1A68     		ldr	r2, [r3]
 385 021a 3B68     		ldr	r3, [r7]
 386 021c D318     		add	r3, r2, r3
 387 021e 1B78     		ldrb	r3, [r3]
 388 0220 DBB2     		uxtb	r3, r3
 389 0222 1649     		ldr	r1, .L32+24
 390 0224 164A     		ldr	r2, .L32+28
 391 0226 081C     		mov	r0, r1
 392 0228 111C     		mov	r1, r2
 393 022a 1A1C     		mov	r2, r3
 394 022c FFF7FEFF 		bl	Qprintf
 395 0230 0CE0     		b	.L27
 396              	.L26:
 128:../Sources/main.c **** 								 else
 129:../Sources/main.c **** 									 TERMINAL_PRINTF(",",LineScanImage1[i]);
 397              		.loc 1 129 0
 398 0232 174B     		ldr	r3, .L32+44
 399 0234 1A68     		ldr	r2, [r3]
 400 0236 3B68     		ldr	r3, [r7]
 401 0238 D318     		add	r3, r2, r3
 402 023a 1B78     		ldrb	r3, [r3]
 403 023c DBB2     		uxtb	r3, r3
 404 023e 0F49     		ldr	r1, .L32+24
 405 0240 154A     		ldr	r2, .L32+52
 406 0242 081C     		mov	r0, r1
 407 0244 111C     		mov	r1, r2
 408 0246 1A1C     		mov	r2, r3
 409 0248 FFF7FEFF 		bl	Qprintf
 410              	.L27:
 123:../Sources/main.c **** 						 for(i=0;i<128;i++)
 411              		.loc 1 123 0
 412 024c 3B68     		ldr	r3, [r7]
 413 024e 0133     		add	r3, r3, #1
 414 0250 3B60     		str	r3, [r7]
 415              	.L25:
 123:../Sources/main.c **** 						 for(i=0;i<128;i++)
 416              		.loc 1 123 0 is_stmt 0 discriminator 1
 417 0252 3B68     		ldr	r3, [r7]
 418 0254 7F2B     		cmp	r3, #127
 419 0256 CED9     		bls	.L28
 130:../Sources/main.c **** 						}										
 131:../Sources/main.c **** 							
 132:../Sources/main.c **** 					}
 133:../Sources/main.c **** 					
 134:../Sources/main.c **** 
 135:../Sources/main.c **** 
 136:../Sources/main.c **** 				break;
 420              		.loc 1 136 0 is_stmt 1
 421 0258 01E0     		b	.L31
 422              	.L30:
  96:../Sources/main.c **** 				break;
 423              		.loc 1 96 0
 424 025a C046     		mov	r8, r8
 425 025c 00E0     		b	.L14
 426              	.L31:
 427              		.loc 1 136 0
 428 025e C046     		mov	r8, r8
 429              	.L14:
 137:../Sources/main.c **** 			}
 138:../Sources/main.c **** 	}
 430              		.loc 1 138 0
 431 0260 D5E6     		b	.L29
 432              	.L33:
 433 0262 C046     		.align	2
 434              	.L32:
 435 0264 80F00F40 		.word	1074786432
 436 0268 40F00F40 		.word	1074786368
 437 026c 00F10F40 		.word	1074786560
 438 0270 00000000 		.word	TFC_Ticker
 439 0274 00000000 		.word	0
 440 0278 00000000 		.word	LineScanImageReady
 441 027c 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 442 0280 00000000 		.word	.LC3
 443 0284 04000000 		.word	.LC5
 444 0288 00000000 		.word	LineScanImage0
 445 028c 08000000 		.word	.LC8
 446 0290 00000000 		.word	LineScanImage1
 447 0294 0C000000 		.word	.LC11
 448 0298 10000000 		.word	.LC13
 449              		.cfi_endproc
 450              	.LFE0:
 452              		.text
 453              	.Letext0:
 454              		.file 2 "C:/Freescale/CW MCU v10.3/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 455              		.file 3 "C:/Users/plexu_000/Dropbox/FRDM-TFC/SRC/FRDM-TFC/Project_Headers/MKL25Z4.h"
 456              		.file 4 "C:/Users/plexu_000/Dropbox/FRDM-TFC/SRC/FRDM-TFC/Project_Headers/TFC\\TFC_Queue.h"
 457              		.file 5 "C:/Users/plexu_000/Dropbox/FRDM-TFC/SRC/FRDM-TFC/Project_Headers/TFC\\TFC_ARM_SysTick.h"
 458              		.file 6 "C:/Users/plexu_000/Dropbox/FRDM-TFC/SRC/FRDM-TFC/Project_Headers/TFC\\TFC_LineScanCamera.
 459              		.file 7 "C:/Users/plexu_000/Dropbox/FRDM-TFC/SRC/FRDM-TFC/Project_Headers/TFC\\TFC_UART.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\PLEXU_~1\AppData\Local\Temp\ccTy0dy6.s:18     .rodata:00000000 $d
C:\Users\PLEXU_~1\AppData\Local\Temp\ccTy0dy6.s:34     .text.main:00000000 $t
C:\Users\PLEXU_~1\AppData\Local\Temp\ccTy0dy6.s:39     .text.main:00000000 main
C:\Users\PLEXU_~1\AppData\Local\Temp\ccTy0dy6.s:435    .text.main:00000264 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
TFC_Init
TFC_Task
TFC_GetDIP_Switch
TFC_ReadPot0
TFC_SetServo
TFC_ReadPot1
TFC_SetBatteryLED_Level
TFC_SetMotorPWM
Qprintf
TFC_Ticker
LineScanImageReady
SDA_SERIAL_OUTGOING_QUEUE
LineScanImage0
LineScanImage1
