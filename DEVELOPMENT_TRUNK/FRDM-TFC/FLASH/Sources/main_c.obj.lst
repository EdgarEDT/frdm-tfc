   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata
  18              		.align	2
  19              	.LC3:
  20 0000 0D0A00   		.ascii	"\015\012\000"
  21 0003 00       		.align	2
  22              	.LC5:
  23 0004 4C3A00   		.ascii	"L:\000"
  24 0007 00       		.align	2
  25              	.LC8:
  26 0008 25582C00 		.ascii	"%X,\000"
  27              		.align	2
  28              	.LC11:
  29 000c 255800   		.ascii	"%X\000"
  30 000f 00       		.align	2
  31              	.LC13:
  32 0010 2C00     		.ascii	",\000"
  33 0012 0000     		.section	.text.main,"ax",%progbits
  34              		.align	2
  35              		.global	main
  36              		.code	16
  37              		.thumb_func
  39              	main:
  40              	.LFB0:
  41              		.file 1 "../Sources/main.c"
   1:../Sources/main.c **** #include "derivative.h" /* include peripheral declarations */
   2:../Sources/main.c **** #include "TFC\TFC.h"
   3:../Sources/main.c **** 
   4:../Sources/main.c **** 
   5:../Sources/main.c **** int main(void)
   6:../Sources/main.c **** {
  42              		.loc 1 6 0
  43              		.cfi_startproc
  44 0000 90B5     		push	{r4, r7, lr}
  45              	.LCFI0:
  46              		.cfi_def_cfa_offset 12
  47              		.cfi_offset 4, -12
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 83B0     		sub	sp, sp, #12
  51              	.LCFI1:
  52              		.cfi_def_cfa_offset 24
  53 0004 00AF     		add	r7, sp, #0
  54              	.LCFI2:
  55              		.cfi_def_cfa_register 7
   7:../Sources/main.c **** 	uint32_t t,i=0;
  56              		.loc 1 7 0
  57 0006 0023     		mov	r3, #0
  58 0008 3B60     		str	r3, [r7]
   8:../Sources/main.c **** 	TFC_Init();
  59              		.loc 1 8 0
  60 000a FFF7FEFF 		bl	TFC_Init
  61              	.L29:
   9:../Sources/main.c **** 	
  10:../Sources/main.c **** 	
  11:../Sources/main.c **** 	for(;;)
  12:../Sources/main.c **** 	{	   
  13:../Sources/main.c **** 		//TFC_Task must be called in your main loop.  This keeps certain processing happy (I.E. Serial po
  14:../Sources/main.c **** 			TFC_Task();
  62              		.loc 1 14 0
  63 000e FFF7FEFF 		bl	TFC_Task
  15:../Sources/main.c **** 
  16:../Sources/main.c **** 			//This Demo program will look at the middle 2 switch to select one of 4 demo modes.
  17:../Sources/main.c **** 			//Let's look at the middle 2 switches
  18:../Sources/main.c **** 			switch((TFC_GetDIP_Switch()>>1)&0x03)
  64              		.loc 1 18 0
  65 0012 FFF7FEFF 		bl	TFC_GetDIP_Switch
  66 0016 031C     		mov	r3, r0
  67 0018 5B08     		lsr	r3, r3, #1
  68 001a DBB2     		uxtb	r3, r3
  69 001c 1A1C     		mov	r2, r3
  70 001e 0323     		mov	r3, #3
  71 0020 1340     		and	r3, r2
  72 0022 022B     		cmp	r3, #2
  73 0024 00D1     		bne	.LCB20
  74 0026 7BE0     		b	.L4	@long jump
  75              	.LCB20:
  76 0028 032B     		cmp	r3, #3
  77 002a 00D1     		bne	.LCB22
  78 002c 9CE0     		b	.L5	@long jump
  79              	.LCB22:
  80 002e 012B     		cmp	r3, #1
  81 0030 42D0     		beq	.L3
  19:../Sources/main.c **** 			{
  20:../Sources/main.c **** 			default:
  21:../Sources/main.c **** 			case 0 :
  22:../Sources/main.c **** 				//Demo mode 0 just tests the switches and LED's
  23:../Sources/main.c **** 				if(TFC_PUSH_BUTTON_0_PRESSED)
  82              		.loc 1 23 0
  83 0032 8A4B     		ldr	r3, .L32
  84 0034 1B69     		ldr	r3, [r3, #16]
  85 0036 1A1C     		mov	r2, r3
  86 0038 8023     		mov	r3, #128
  87 003a 9B01     		lsl	r3, r3, #6
  88 003c 1340     		and	r3, r2
  89 003e 04D0     		beq	.L6
  24:../Sources/main.c **** 					TFC_BAT_LED0_ON;
  90              		.loc 1 24 0
  91 0040 874B     		ldr	r3, .L32+4
  92 0042 8022     		mov	r2, #128
  93 0044 5200     		lsl	r2, r2, #1
  94 0046 5A60     		str	r2, [r3, #4]
  95 0048 03E0     		b	.L7
  96              	.L6:
  25:../Sources/main.c **** 				else
  26:../Sources/main.c **** 					TFC_BAT_LED0_OFF;
  97              		.loc 1 26 0
  98 004a 854B     		ldr	r3, .L32+4
  99 004c 8022     		mov	r2, #128
 100 004e 5200     		lsl	r2, r2, #1
 101 0050 9A60     		str	r2, [r3, #8]
 102              	.L7:
  27:../Sources/main.c **** 				
  28:../Sources/main.c **** 				if(TFC_PUSH_BUTTON_1_PRESSED)
 103              		.loc 1 28 0
 104 0052 824B     		ldr	r3, .L32
 105 0054 1B69     		ldr	r3, [r3, #16]
 106 0056 1A1C     		mov	r2, r3
 107 0058 8023     		mov	r3, #128
 108 005a 9B02     		lsl	r3, r3, #10
 109 005c 1340     		and	r3, r2
 110 005e 04D0     		beq	.L8
  29:../Sources/main.c **** 					TFC_BAT_LED3_ON;
 111              		.loc 1 29 0
 112 0060 7F4B     		ldr	r3, .L32+4
 113 0062 8022     		mov	r2, #128
 114 0064 1201     		lsl	r2, r2, #4
 115 0066 5A60     		str	r2, [r3, #4]
 116 0068 03E0     		b	.L9
 117              	.L8:
  30:../Sources/main.c **** 				else
  31:../Sources/main.c **** 					TFC_BAT_LED3_OFF;
 118              		.loc 1 31 0
 119 006a 7D4B     		ldr	r3, .L32+4
 120 006c 8022     		mov	r2, #128
 121 006e 1201     		lsl	r2, r2, #4
 122 0070 9A60     		str	r2, [r3, #8]
 123              	.L9:
  32:../Sources/main.c **** 				
  33:../Sources/main.c **** 				
  34:../Sources/main.c **** 				if(TFC_GetDIP_Switch()&0x01)
 124              		.loc 1 34 0
 125 0072 FFF7FEFF 		bl	TFC_GetDIP_Switch
 126 0076 031C     		mov	r3, r0
 127 0078 1A1C     		mov	r2, r3
 128 007a 0123     		mov	r3, #1
 129 007c 1340     		and	r3, r2
 130 007e DBB2     		uxtb	r3, r3
 131 0080 002B     		cmp	r3, #0
 132 0082 04D0     		beq	.L10
  35:../Sources/main.c **** 					TFC_BAT_LED1_ON;
 133              		.loc 1 35 0
 134 0084 764B     		ldr	r3, .L32+4
 135 0086 8022     		mov	r2, #128
 136 0088 9200     		lsl	r2, r2, #2
 137 008a 5A60     		str	r2, [r3, #4]
 138 008c 03E0     		b	.L11
 139              	.L10:
  36:../Sources/main.c **** 				else
  37:../Sources/main.c **** 					TFC_BAT_LED1_OFF;
 140              		.loc 1 37 0
 141 008e 744B     		ldr	r3, .L32+4
 142 0090 8022     		mov	r2, #128
 143 0092 9200     		lsl	r2, r2, #2
 144 0094 9A60     		str	r2, [r3, #8]
 145              	.L11:
  38:../Sources/main.c **** 				
  39:../Sources/main.c **** 				if(TFC_GetDIP_Switch()&0x08)
 146              		.loc 1 39 0
 147 0096 FFF7FEFF 		bl	TFC_GetDIP_Switch
 148 009a 031C     		mov	r3, r0
 149 009c 1A1C     		mov	r2, r3
 150 009e 0823     		mov	r3, #8
 151 00a0 1340     		and	r3, r2
 152 00a2 04D0     		beq	.L12
  40:../Sources/main.c **** 					TFC_BAT_LED2_ON;
 153              		.loc 1 40 0
 154 00a4 6E4B     		ldr	r3, .L32+4
 155 00a6 8022     		mov	r2, #128
 156 00a8 D200     		lsl	r2, r2, #3
 157 00aa 5A60     		str	r2, [r3, #4]
  41:../Sources/main.c **** 				else
  42:../Sources/main.c **** 					TFC_BAT_LED2_OFF;
  43:../Sources/main.c **** 								
  44:../Sources/main.c **** 			
  45:../Sources/main.c **** 				
  46:../Sources/main.c **** 				break;
 158              		.loc 1 46 0
 159 00ac D4E0     		b	.L14
 160              	.L12:
  42:../Sources/main.c **** 					TFC_BAT_LED2_OFF;
 161              		.loc 1 42 0
 162 00ae 6C4B     		ldr	r3, .L32+4
 163 00b0 8022     		mov	r2, #128
 164 00b2 D200     		lsl	r2, r2, #3
 165 00b4 9A60     		str	r2, [r3, #8]
 166              		.loc 1 46 0
 167 00b6 CFE0     		b	.L14
 168              	.L3:
  47:../Sources/main.c **** 					
  48:../Sources/main.c **** 			case 1:
  49:../Sources/main.c **** 				
  50:../Sources/main.c **** 				//Demo mode 1 will just move the servos with the on-board potentiometers
  51:../Sources/main.c **** 				if(TFC_Ticker[0]>=20)
 169              		.loc 1 51 0
 170 00b8 6A4B     		ldr	r3, .L32+8
 171 00ba 1B68     		ldr	r3, [r3]
 172 00bc 132B     		cmp	r3, #19
 173 00be 10D9     		bls	.L15
  52:../Sources/main.c **** 				{
  53:../Sources/main.c **** 					TFC_Ticker[0] = 0; //reset the Ticker
 174              		.loc 1 53 0
 175 00c0 684B     		ldr	r3, .L32+8
 176 00c2 0022     		mov	r2, #0
 177 00c4 1A60     		str	r2, [r3]
  54:../Sources/main.c **** 					//Every 20 mSeconds, update the Servos
  55:../Sources/main.c **** 					TFC_SetServo(0,TFC_ReadPot0());
 178              		.loc 1 55 0
 179 00c6 FFF7FEFF 		bl	TFC_ReadPot0
 180 00ca 031C     		add	r3, r0, #0
 181 00cc 0020     		mov	r0, #0
 182 00ce 191C     		add	r1, r3, #0
 183 00d0 FFF7FEFF 		bl	TFC_SetServo
  56:../Sources/main.c **** 					TFC_SetServo(1,TFC_ReadPot1());
 184              		.loc 1 56 0
 185 00d4 FFF7FEFF 		bl	TFC_ReadPot1
 186 00d8 031C     		add	r3, r0, #0
 187 00da 0120     		mov	r0, #1
 188 00dc 191C     		add	r1, r3, #0
 189 00de FFF7FEFF 		bl	TFC_SetServo
 190              	.L15:
  57:../Sources/main.c **** 				}
  58:../Sources/main.c **** 				//Let's put a pattern on the LEDs
  59:../Sources/main.c **** 				if(TFC_Ticker[1] >= 125)
 191              		.loc 1 59 0
 192 00e2 604B     		ldr	r3, .L32+8
 193 00e4 5B68     		ldr	r3, [r3, #4]
 194 00e6 7C2B     		cmp	r3, #124
 195 00e8 0FD9     		bls	.L16
  60:../Sources/main.c **** 				{
  61:../Sources/main.c **** 					TFC_Ticker[1] = 0;
 196              		.loc 1 61 0
 197 00ea 5E4B     		ldr	r3, .L32+8
 198 00ec 0022     		mov	r2, #0
 199 00ee 5A60     		str	r2, [r3, #4]
  62:../Sources/main.c **** 					t++;
 200              		.loc 1 62 0
 201 00f0 7B68     		ldr	r3, [r7, #4]
 202 00f2 0133     		add	r3, r3, #1
 203 00f4 7B60     		str	r3, [r7, #4]
  63:../Sources/main.c **** 					if(t>4)
 204              		.loc 1 63 0
 205 00f6 7B68     		ldr	r3, [r7, #4]
 206 00f8 042B     		cmp	r3, #4
 207 00fa 01D9     		bls	.L17
  64:../Sources/main.c **** 					{
  65:../Sources/main.c **** 						t=0;
 208              		.loc 1 65 0
 209 00fc 0023     		mov	r3, #0
 210 00fe 7B60     		str	r3, [r7, #4]
 211              	.L17:
  66:../Sources/main.c **** 					}			
  67:../Sources/main.c **** 					TFC_SetBatteryLED_Level(t);
 212              		.loc 1 67 0
 213 0100 7B68     		ldr	r3, [r7, #4]
 214 0102 DBB2     		uxtb	r3, r3
 215 0104 181C     		mov	r0, r3
 216 0106 FFF7FEFF 		bl	TFC_SetBatteryLED_Level
 217              	.L16:
  68:../Sources/main.c **** 				}
  69:../Sources/main.c **** 				
  70:../Sources/main.c **** 				TFC_SetMotorPWM(0,0); //Make sure motors are off
 218              		.loc 1 70 0
 219 010a 574A     		ldr	r2, .L32+12
 220 010c 564B     		ldr	r3, .L32+12
 221 010e 101C     		add	r0, r2, #0
 222 0110 191C     		add	r1, r3, #0
 223 0112 FFF7FEFF 		bl	TFC_SetMotorPWM
  71:../Sources/main.c **** 				TFC_HBRIDGE_DISABLE;
 224              		.loc 1 71 0
 225 0116 554B     		ldr	r3, .L32+16
 226 0118 8022     		mov	r2, #128
 227 011a 9203     		lsl	r2, r2, #14
 228 011c 9A60     		str	r2, [r3, #8]
  72:../Sources/main.c **** 			
  73:../Sources/main.c **** 
  74:../Sources/main.c **** 				break;
 229              		.loc 1 74 0
 230 011e 9BE0     		b	.L14
 231              	.L4:
  75:../Sources/main.c **** 				
  76:../Sources/main.c **** 			case 2 :
  77:../Sources/main.c **** 				
  78:../Sources/main.c **** 				//Demo Mode 2 will use the Pots to make the motors move
  79:../Sources/main.c **** 				TFC_HBRIDGE_ENABLE;
 232              		.loc 1 79 0
 233 0120 524B     		ldr	r3, .L32+16
 234 0122 8022     		mov	r2, #128
 235 0124 9203     		lsl	r2, r2, #14
 236 0126 5A60     		str	r2, [r3, #4]
  80:../Sources/main.c **** 				TFC_SetMotorPWM(TFC_ReadPot0(),TFC_ReadPot1());
 237              		.loc 1 80 0
 238 0128 FFF7FEFF 		bl	TFC_ReadPot0
 239 012c 041C     		add	r4, r0, #0
 240 012e FFF7FEFF 		bl	TFC_ReadPot1
 241 0132 031C     		add	r3, r0, #0
 242 0134 201C     		add	r0, r4, #0
 243 0136 191C     		add	r1, r3, #0
 244 0138 FFF7FEFF 		bl	TFC_SetMotorPWM
  81:../Sources/main.c **** 						
  82:../Sources/main.c **** 				//Let's put a pattern on the LEDs
  83:../Sources/main.c **** 				if(TFC_Ticker[1] >= 125)
 245              		.loc 1 83 0
 246 013c 494B     		ldr	r3, .L32+8
 247 013e 5B68     		ldr	r3, [r3, #4]
 248 0140 7C2B     		cmp	r3, #124
 249 0142 00D8     		bhi	.LCB183
 250 0144 85E0     		b	.L30	@long jump
 251              	.LCB183:
  84:../Sources/main.c **** 					{
  85:../Sources/main.c **** 						TFC_Ticker[1] = 0;
 252              		.loc 1 85 0
 253 0146 474B     		ldr	r3, .L32+8
 254 0148 0022     		mov	r2, #0
 255 014a 5A60     		str	r2, [r3, #4]
  86:../Sources/main.c **** 							t++;
 256              		.loc 1 86 0
 257 014c 7B68     		ldr	r3, [r7, #4]
 258 014e 0133     		add	r3, r3, #1
 259 0150 7B60     		str	r3, [r7, #4]
  87:../Sources/main.c **** 							if(t>4)
 260              		.loc 1 87 0
 261 0152 7B68     		ldr	r3, [r7, #4]
 262 0154 042B     		cmp	r3, #4
 263 0156 01D9     		bls	.L19
  88:../Sources/main.c **** 							{
  89:../Sources/main.c **** 								t=0;
 264              		.loc 1 89 0
 265 0158 0023     		mov	r3, #0
 266 015a 7B60     		str	r3, [r7, #4]
 267              	.L19:
  90:../Sources/main.c **** 							}			
  91:../Sources/main.c **** 						TFC_SetBatteryLED_Level(t);
 268              		.loc 1 91 0
 269 015c 7B68     		ldr	r3, [r7, #4]
 270 015e DBB2     		uxtb	r3, r3
 271 0160 181C     		mov	r0, r3
 272 0162 FFF7FEFF 		bl	TFC_SetBatteryLED_Level
  92:../Sources/main.c **** 					}
  93:../Sources/main.c **** 				break;
 273              		.loc 1 93 0
 274 0166 74E0     		b	.L30
 275              	.L5:
  94:../Sources/main.c **** 			
  95:../Sources/main.c **** 			case 3 :
  96:../Sources/main.c **** 			
  97:../Sources/main.c **** 				//Demo Mode 3 will be in Freescale Garage Mode.  It will beam data from the Camera to the 
  98:../Sources/main.c **** 				//Labview Application
  99:../Sources/main.c **** 				
 100:../Sources/main.c **** 		
 101:../Sources/main.c **** 				if(TFC_Ticker[0]>100 && LineScanImageReady==1)
 276              		.loc 1 101 0
 277 0168 3E4B     		ldr	r3, .L32+8
 278 016a 1B68     		ldr	r3, [r3]
 279 016c 642B     		cmp	r3, #100
 280 016e 00D8     		bhi	.LCB208
 281 0170 71E0     		b	.L31	@long jump
 282              	.LCB208:
 283              		.loc 1 101 0 is_stmt 0 discriminator 1
 284 0172 3F4B     		ldr	r3, .L32+20
 285 0174 1B78     		ldrb	r3, [r3]
 286 0176 DBB2     		uxtb	r3, r3
 287 0178 012B     		cmp	r3, #1
 288 017a 6CD1     		bne	.L31
 102:../Sources/main.c **** 					{
 103:../Sources/main.c **** 					 TFC_Ticker[0] = 0;
 289              		.loc 1 103 0 is_stmt 1
 290 017c 394B     		ldr	r3, .L32+8
 291 017e 0022     		mov	r2, #0
 292 0180 1A60     		str	r2, [r3]
 104:../Sources/main.c **** 					 LineScanImageReady=0;
 293              		.loc 1 104 0
 294 0182 3B4B     		ldr	r3, .L32+20
 295 0184 0022     		mov	r2, #0
 296 0186 1A70     		strb	r2, [r3]
 105:../Sources/main.c **** 					 TERMINAL_PRINTF("\r\n");
 297              		.loc 1 105 0
 298 0188 3A4A     		ldr	r2, .L32+24
 299 018a 3B4B     		ldr	r3, .L32+28
 300 018c 101C     		mov	r0, r2
 301 018e 191C     		mov	r1, r3
 302 0190 FFF7FEFF 		bl	Qprintf
 106:../Sources/main.c **** 					 TERMINAL_PRINTF("L:");
 303              		.loc 1 106 0
 304 0194 374A     		ldr	r2, .L32+24
 305 0196 394B     		ldr	r3, .L32+32
 306 0198 101C     		mov	r0, r2
 307 019a 191C     		mov	r1, r3
 308 019c FFF7FEFF 		bl	Qprintf
 107:../Sources/main.c **** 					 
 108:../Sources/main.c **** 					 	if(t==0)
 309              		.loc 1 108 0
 310 01a0 7B68     		ldr	r3, [r7, #4]
 311 01a2 002B     		cmp	r3, #0
 312 01a4 02D1     		bne	.L21
 109:../Sources/main.c **** 					 		t=3;
 313              		.loc 1 109 0
 314 01a6 0323     		mov	r3, #3
 315 01a8 7B60     		str	r3, [r7, #4]
 316 01aa 02E0     		b	.L22
 317              	.L21:
 110:../Sources/main.c **** 					 	else
 111:../Sources/main.c **** 					 		t--;
 318              		.loc 1 111 0
 319 01ac 7B68     		ldr	r3, [r7, #4]
 320 01ae 013B     		sub	r3, r3, #1
 321 01b0 7B60     		str	r3, [r7, #4]
 322              	.L22:
 112:../Sources/main.c **** 					 	
 113:../Sources/main.c **** 						 TFC_SetBatteryLED_Level(t);
 323              		.loc 1 113 0
 324 01b2 7B68     		ldr	r3, [r7, #4]
 325 01b4 DBB2     		uxtb	r3, r3
 326 01b6 181C     		mov	r0, r3
 327 01b8 FFF7FEFF 		bl	TFC_SetBatteryLED_Level
 114:../Sources/main.c **** 						
 115:../Sources/main.c **** 						 for(i=0;i<128;i++)
 328              		.loc 1 115 0
 329 01bc 0023     		mov	r3, #0
 330 01be 3B60     		str	r3, [r7]
 331 01c0 0FE0     		b	.L23
 332              	.L24:
 116:../Sources/main.c **** 						 {
 117:../Sources/main.c **** 								 TERMINAL_PRINTF("%X,",LineScanImage0[i]);
 333              		.loc 1 117 0 discriminator 2
 334 01c2 2F4B     		ldr	r3, .L32+36
 335 01c4 1A68     		ldr	r2, [r3]
 336 01c6 3B68     		ldr	r3, [r7]
 337 01c8 D318     		add	r3, r2, r3
 338 01ca 1B78     		ldrb	r3, [r3]
 339 01cc DBB2     		uxtb	r3, r3
 340 01ce 2949     		ldr	r1, .L32+24
 341 01d0 2C4A     		ldr	r2, .L32+40
 342 01d2 081C     		mov	r0, r1
 343 01d4 111C     		mov	r1, r2
 344 01d6 1A1C     		mov	r2, r3
 345 01d8 FFF7FEFF 		bl	Qprintf
 115:../Sources/main.c **** 						 for(i=0;i<128;i++)
 346              		.loc 1 115 0 discriminator 2
 347 01dc 3B68     		ldr	r3, [r7]
 348 01de 0133     		add	r3, r3, #1
 349 01e0 3B60     		str	r3, [r7]
 350              	.L23:
 115:../Sources/main.c **** 						 for(i=0;i<128;i++)
 351              		.loc 1 115 0 is_stmt 0 discriminator 1
 352 01e2 3B68     		ldr	r3, [r7]
 353 01e4 7F2B     		cmp	r3, #127
 354 01e6 ECD9     		bls	.L24
 118:../Sources/main.c **** 						 }
 119:../Sources/main.c **** 						
 120:../Sources/main.c **** 						 for(i=0;i<128;i++)
 355              		.loc 1 120 0 is_stmt 1
 356 01e8 0023     		mov	r3, #0
 357 01ea 3B60     		str	r3, [r7]
 358 01ec 2DE0     		b	.L25
 359              	.L28:
 121:../Sources/main.c **** 						 {
 122:../Sources/main.c **** 								 TERMINAL_PRINTF("%X",LineScanImage1[i]);
 360              		.loc 1 122 0
 361 01ee 264B     		ldr	r3, .L32+44
 362 01f0 1A68     		ldr	r2, [r3]
 363 01f2 3B68     		ldr	r3, [r7]
 364 01f4 D318     		add	r3, r2, r3
 365 01f6 1B78     		ldrb	r3, [r3]
 366 01f8 DBB2     		uxtb	r3, r3
 367 01fa 1E49     		ldr	r1, .L32+24
 368 01fc 234A     		ldr	r2, .L32+48
 369 01fe 081C     		mov	r0, r1
 370 0200 111C     		mov	r1, r2
 371 0202 1A1C     		mov	r2, r3
 372 0204 FFF7FEFF 		bl	Qprintf
 123:../Sources/main.c **** 								 if(i==127)
 373              		.loc 1 123 0
 374 0208 3B68     		ldr	r3, [r7]
 375 020a 7F2B     		cmp	r3, #127
 376 020c 0DD1     		bne	.L26
 124:../Sources/main.c **** 									 TERMINAL_PRINTF("\r\n",LineScanImage1[i]);
 377              		.loc 1 124 0
 378 020e 1E4B     		ldr	r3, .L32+44
 379 0210 1A68     		ldr	r2, [r3]
 380 0212 3B68     		ldr	r3, [r7]
 381 0214 D318     		add	r3, r2, r3
 382 0216 1B78     		ldrb	r3, [r3]
 383 0218 DBB2     		uxtb	r3, r3
 384 021a 1649     		ldr	r1, .L32+24
 385 021c 164A     		ldr	r2, .L32+28
 386 021e 081C     		mov	r0, r1
 387 0220 111C     		mov	r1, r2
 388 0222 1A1C     		mov	r2, r3
 389 0224 FFF7FEFF 		bl	Qprintf
 390 0228 0CE0     		b	.L27
 391              	.L26:
 125:../Sources/main.c **** 								 else
 126:../Sources/main.c **** 									 TERMINAL_PRINTF(",",LineScanImage1[i]);
 392              		.loc 1 126 0
 393 022a 174B     		ldr	r3, .L32+44
 394 022c 1A68     		ldr	r2, [r3]
 395 022e 3B68     		ldr	r3, [r7]
 396 0230 D318     		add	r3, r2, r3
 397 0232 1B78     		ldrb	r3, [r3]
 398 0234 DBB2     		uxtb	r3, r3
 399 0236 0F49     		ldr	r1, .L32+24
 400 0238 154A     		ldr	r2, .L32+52
 401 023a 081C     		mov	r0, r1
 402 023c 111C     		mov	r1, r2
 403 023e 1A1C     		mov	r2, r3
 404 0240 FFF7FEFF 		bl	Qprintf
 405              	.L27:
 120:../Sources/main.c **** 						 for(i=0;i<128;i++)
 406              		.loc 1 120 0
 407 0244 3B68     		ldr	r3, [r7]
 408 0246 0133     		add	r3, r3, #1
 409 0248 3B60     		str	r3, [r7]
 410              	.L25:
 120:../Sources/main.c **** 						 for(i=0;i<128;i++)
 411              		.loc 1 120 0 is_stmt 0 discriminator 1
 412 024a 3B68     		ldr	r3, [r7]
 413 024c 7F2B     		cmp	r3, #127
 414 024e CED9     		bls	.L28
 127:../Sources/main.c **** 						}										
 128:../Sources/main.c **** 							
 129:../Sources/main.c **** 					}
 130:../Sources/main.c **** 					
 131:../Sources/main.c **** 
 132:../Sources/main.c **** 
 133:../Sources/main.c **** 				break;
 415              		.loc 1 133 0 is_stmt 1
 416 0250 01E0     		b	.L31
 417              	.L30:
  93:../Sources/main.c **** 				break;
 418              		.loc 1 93 0
 419 0252 C046     		mov	r8, r8
 420 0254 00E0     		b	.L14
 421              	.L31:
 422              		.loc 1 133 0
 423 0256 C046     		mov	r8, r8
 424              	.L14:
 134:../Sources/main.c **** 			}
 135:../Sources/main.c **** 	}
 425              		.loc 1 135 0
 426 0258 D9E6     		b	.L29
 427              	.L33:
 428 025a C046     		.align	2
 429              	.L32:
 430 025c 80F00F40 		.word	1074786432
 431 0260 40F00F40 		.word	1074786368
 432 0264 00000000 		.word	TFC_Ticker
 433 0268 00000000 		.word	0
 434 026c 00F10F40 		.word	1074786560
 435 0270 00000000 		.word	LineScanImageReady
 436 0274 00000000 		.word	SDA_SERIAL_OUTGOING_QUEUE
 437 0278 00000000 		.word	.LC3
 438 027c 04000000 		.word	.LC5
 439 0280 00000000 		.word	LineScanImage0
 440 0284 08000000 		.word	.LC8
 441 0288 00000000 		.word	LineScanImage1
 442 028c 0C000000 		.word	.LC11
 443 0290 10000000 		.word	.LC13
 444              		.cfi_endproc
 445              	.LFE0:
 447              		.text
 448              	.Letext0:
 449              		.file 2 "C:/Freescale/CW MCU v10.3/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 450              		.file 3 "C:/ELI/BUSINESS/CLIENT_DATA/FREESCALE/frdm-tfc__google-code/DEVELOPMENT_TRUNK/FRDM-TFC/Pr
 451              		.file 4 "C:/ELI/BUSINESS/CLIENT_DATA/FREESCALE/frdm-tfc__google-code/DEVELOPMENT_TRUNK/FRDM-TFC/Pr
 452              		.file 5 "C:/ELI/BUSINESS/CLIENT_DATA/FREESCALE/frdm-tfc__google-code/DEVELOPMENT_TRUNK/FRDM-TFC/Pr
 453              		.file 6 "C:/ELI/BUSINESS/CLIENT_DATA/FREESCALE/frdm-tfc__google-code/DEVELOPMENT_TRUNK/FRDM-TFC/Pr
 454              		.file 7 "C:/ELI/BUSINESS/CLIENT_DATA/FREESCALE/frdm-tfc__google-code/DEVELOPMENT_TRUNK/FRDM-TFC/Pr
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\ehughes\AppData\Local\Temp\ccsFo18o.s:18     .rodata:00000000 $d
C:\Users\ehughes\AppData\Local\Temp\ccsFo18o.s:34     .text.main:00000000 $t
C:\Users\ehughes\AppData\Local\Temp\ccsFo18o.s:39     .text.main:00000000 main
C:\Users\ehughes\AppData\Local\Temp\ccsFo18o.s:430    .text.main:0000025c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
TFC_Init
TFC_Task
TFC_GetDIP_Switch
TFC_ReadPot0
TFC_SetServo
TFC_ReadPot1
TFC_SetBatteryLED_Level
TFC_SetMotorPWM
Qprintf
TFC_Ticker
LineScanImageReady
SDA_SERIAL_OUTGOING_QUEUE
LineScanImage0
LineScanImage1
